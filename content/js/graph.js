/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 6750.0, "minX": 0.0, "maxY": 15441.0, "series": [{"data": [[0.0, 6750.0], [0.1, 6750.0], [0.2, 6750.0], [0.3, 6750.0], [0.4, 6846.0], [0.5, 6846.0], [0.6, 6846.0], [0.7, 6905.0], [0.8, 6905.0], [0.9, 6905.0], [1.0, 6924.0], [1.1, 6924.0], [1.2, 6924.0], [1.3, 6924.0], [1.4, 6933.0], [1.5, 6933.0], [1.6, 6933.0], [1.7, 7003.0], [1.8, 7003.0], [1.9, 7003.0], [2.0, 7097.0], [2.1, 7097.0], [2.2, 7097.0], [2.3, 7097.0], [2.4, 7239.0], [2.5, 7239.0], [2.6, 7239.0], [2.7, 7357.0], [2.8, 7357.0], [2.9, 7357.0], [3.0, 7593.0], [3.1, 7593.0], [3.2, 7593.0], [3.3, 7637.0], [3.4, 7637.0], [3.5, 7637.0], [3.6, 7637.0], [3.7, 7733.0], [3.8, 7733.0], [3.9, 7733.0], [4.0, 7841.0], [4.1, 7841.0], [4.2, 7841.0], [4.3, 7844.0], [4.4, 7844.0], [4.5, 7844.0], [4.6, 7844.0], [4.7, 7892.0], [4.8, 7892.0], [4.9, 7892.0], [5.0, 7936.0], [5.1, 7936.0], [5.2, 7936.0], [5.3, 8011.0], [5.4, 8011.0], [5.5, 8011.0], [5.6, 8092.0], [5.7, 8092.0], [5.8, 8092.0], [5.9, 8092.0], [6.0, 8121.0], [6.1, 8121.0], [6.2, 8121.0], [6.3, 8143.0], [6.4, 8143.0], [6.5, 8143.0], [6.6, 8177.0], [6.7, 8177.0], [6.8, 8177.0], [6.9, 8177.0], [7.0, 8232.0], [7.1, 8232.0], [7.2, 8232.0], [7.3, 8251.0], [7.4, 8251.0], [7.5, 8251.0], [7.6, 8258.0], [7.7, 8258.0], [7.8, 8258.0], [7.9, 8296.0], [8.0, 8296.0], [8.1, 8296.0], [8.2, 8296.0], [8.3, 8297.0], [8.4, 8297.0], [8.5, 8297.0], [8.6, 8414.0], [8.7, 8414.0], [8.8, 8414.0], [8.9, 8420.0], [9.0, 8420.0], [9.1, 8420.0], [9.2, 8420.0], [9.3, 8435.0], [9.4, 8435.0], [9.5, 8435.0], [9.6, 8443.0], [9.7, 8443.0], [9.8, 8443.0], [9.9, 8448.0], [10.0, 8448.0], [10.1, 8448.0], [10.2, 8458.0], [10.3, 8458.0], [10.4, 8458.0], [10.5, 8458.0], [10.6, 8459.0], [10.7, 8459.0], [10.8, 8459.0], [10.9, 8492.0], [11.0, 8492.0], [11.1, 8492.0], [11.2, 8567.0], [11.3, 8567.0], [11.4, 8567.0], [11.5, 8567.0], [11.6, 8597.0], [11.7, 8597.0], [11.8, 8597.0], [11.9, 8612.0], [12.0, 8612.0], [12.1, 8612.0], [12.2, 8644.0], [12.3, 8644.0], [12.4, 8644.0], [12.5, 8644.0], [12.6, 8662.0], [12.7, 8662.0], [12.8, 8662.0], [12.9, 8667.0], [13.0, 8667.0], [13.1, 8667.0], [13.2, 8679.0], [13.3, 8679.0], [13.4, 8679.0], [13.5, 8701.0], [13.6, 8701.0], [13.7, 8701.0], [13.8, 8701.0], [13.9, 8702.0], [14.0, 8702.0], [14.1, 8702.0], [14.2, 8731.0], [14.3, 8731.0], [14.4, 8731.0], [14.5, 8754.0], [14.6, 8754.0], [14.7, 8754.0], [14.8, 8754.0], [14.9, 8824.0], [15.0, 8824.0], [15.1, 8824.0], [15.2, 8835.0], [15.3, 8835.0], [15.4, 8835.0], [15.5, 8859.0], [15.6, 8859.0], [15.7, 8859.0], [15.8, 8867.0], [15.9, 8867.0], [16.0, 8867.0], [16.1, 8867.0], [16.2, 8875.0], [16.3, 8875.0], [16.4, 8875.0], [16.5, 8884.0], [16.6, 8884.0], [16.7, 8884.0], [16.8, 8923.0], [16.9, 8923.0], [17.0, 8923.0], [17.1, 8923.0], [17.2, 8925.0], [17.3, 8925.0], [17.4, 8925.0], [17.5, 8929.0], [17.6, 8929.0], [17.7, 8929.0], [17.8, 8945.0], [17.9, 8945.0], [18.0, 8945.0], [18.1, 8974.0], [18.2, 8974.0], [18.3, 8974.0], [18.4, 8974.0], [18.5, 8979.0], [18.6, 8979.0], [18.7, 8979.0], [18.8, 9010.0], [18.9, 9010.0], [19.0, 9010.0], [19.1, 9021.0], [19.2, 9021.0], [19.3, 9021.0], [19.4, 9021.0], [19.5, 9027.0], [19.6, 9027.0], [19.7, 9027.0], [19.8, 9045.0], [19.9, 9045.0], [20.0, 9045.0], [20.1, 9067.0], [20.2, 9067.0], [20.3, 9067.0], [20.4, 9071.0], [20.5, 9071.0], [20.6, 9071.0], [20.7, 9071.0], [20.8, 9084.0], [20.9, 9084.0], [21.0, 9084.0], [21.1, 9087.0], [21.2, 9087.0], [21.3, 9087.0], [21.4, 9087.0], [21.5, 9087.0], [21.6, 9087.0], [21.7, 9087.0], [21.8, 9115.0], [21.9, 9115.0], [22.0, 9115.0], [22.1, 9116.0], [22.2, 9116.0], [22.3, 9116.0], [22.4, 9134.0], [22.5, 9134.0], [22.6, 9134.0], [22.7, 9160.0], [22.8, 9160.0], [22.9, 9160.0], [23.0, 9160.0], [23.1, 9188.0], [23.2, 9188.0], [23.3, 9188.0], [23.4, 9193.0], [23.5, 9193.0], [23.6, 9193.0], [23.7, 9200.0], [23.8, 9200.0], [23.9, 9200.0], [24.0, 9200.0], [24.1, 9209.0], [24.2, 9209.0], [24.3, 9209.0], [24.4, 9215.0], [24.5, 9215.0], [24.6, 9215.0], [24.7, 9232.0], [24.8, 9232.0], [24.9, 9232.0], [25.0, 9257.0], [25.1, 9257.0], [25.2, 9257.0], [25.3, 9257.0], [25.4, 9268.0], [25.5, 9268.0], [25.6, 9268.0], [25.7, 9269.0], [25.8, 9269.0], [25.9, 9269.0], [26.0, 9273.0], [26.1, 9273.0], [26.2, 9273.0], [26.3, 9273.0], [26.4, 9281.0], [26.5, 9281.0], [26.6, 9281.0], [26.7, 9285.0], [26.8, 9285.0], [26.9, 9285.0], [27.0, 9292.0], [27.1, 9292.0], [27.2, 9292.0], [27.3, 9292.0], [27.4, 9294.0], [27.5, 9294.0], [27.6, 9294.0], [27.7, 9300.0], [27.8, 9300.0], [27.9, 9300.0], [28.0, 9325.0], [28.1, 9325.0], [28.2, 9325.0], [28.3, 9344.0], [28.4, 9344.0], [28.5, 9344.0], [28.6, 9344.0], [28.7, 9357.0], [28.8, 9357.0], [28.9, 9357.0], [29.0, 9381.0], [29.1, 9381.0], [29.2, 9381.0], [29.3, 9423.0], [29.4, 9423.0], [29.5, 9423.0], [29.6, 9423.0], [29.7, 9435.0], [29.8, 9435.0], [29.9, 9435.0], [30.0, 9450.0], [30.1, 9450.0], [30.2, 9450.0], [30.3, 9465.0], [30.4, 9465.0], [30.5, 9465.0], [30.6, 9482.0], [30.7, 9482.0], [30.8, 9482.0], [30.9, 9482.0], [31.0, 9489.0], [31.1, 9489.0], [31.2, 9489.0], [31.3, 9505.0], [31.4, 9505.0], [31.5, 9505.0], [31.6, 9520.0], [31.7, 9520.0], [31.8, 9520.0], [31.9, 9520.0], [32.0, 9526.0], [32.1, 9526.0], [32.2, 9526.0], [32.3, 9532.0], [32.4, 9532.0], [32.5, 9532.0], [32.6, 9537.0], [32.7, 9537.0], [32.8, 9537.0], [32.9, 9549.0], [33.0, 9549.0], [33.1, 9549.0], [33.2, 9549.0], [33.3, 9561.0], [33.4, 9561.0], [33.5, 9561.0], [33.6, 9571.0], [33.7, 9571.0], [33.8, 9571.0], [33.9, 9575.0], [34.0, 9575.0], [34.1, 9575.0], [34.2, 9575.0], [34.3, 9580.0], [34.4, 9580.0], [34.5, 9580.0], [34.6, 9588.0], [34.7, 9588.0], [34.8, 9588.0], [34.9, 9628.0], [35.0, 9628.0], [35.1, 9628.0], [35.2, 9745.0], [35.3, 9745.0], [35.4, 9745.0], [35.5, 9745.0], [35.6, 9775.0], [35.7, 9775.0], [35.8, 9775.0], [35.9, 9809.0], [36.0, 9809.0], [36.1, 9809.0], [36.2, 9820.0], [36.3, 9820.0], [36.4, 9820.0], [36.5, 9820.0], [36.6, 9820.0], [36.7, 9820.0], [36.8, 9820.0], [36.9, 9835.0], [37.0, 9835.0], [37.1, 9835.0], [37.2, 9866.0], [37.3, 9866.0], [37.4, 9866.0], [37.5, 9878.0], [37.6, 9878.0], [37.7, 9878.0], [37.8, 9878.0], [37.9, 9883.0], [38.0, 9883.0], [38.1, 9883.0], [38.2, 9885.0], [38.3, 9885.0], [38.4, 9885.0], [38.5, 9888.0], [38.6, 9888.0], [38.7, 9888.0], [38.8, 9888.0], [38.9, 9910.0], [39.0, 9910.0], [39.1, 9910.0], [39.2, 9923.0], [39.3, 9923.0], [39.4, 9923.0], [39.5, 9927.0], [39.6, 9927.0], [39.7, 9927.0], [39.8, 9927.0], [39.9, 9932.0], [40.0, 9932.0], [40.1, 9932.0], [40.2, 9933.0], [40.3, 9933.0], [40.4, 9933.0], [40.5, 9934.0], [40.6, 9934.0], [40.7, 9934.0], [40.8, 9940.0], [40.9, 9940.0], [41.0, 9940.0], [41.1, 9940.0], [41.2, 9959.0], [41.3, 9959.0], [41.4, 9959.0], [41.5, 9973.0], [41.6, 9973.0], [41.7, 9973.0], [41.8, 9992.0], [41.9, 9992.0], [42.0, 9992.0], [42.1, 9992.0], [42.2, 10001.0], [42.3, 10001.0], [42.4, 10001.0], [42.5, 10002.0], [42.6, 10002.0], [42.7, 10002.0], [42.8, 10008.0], [42.9, 10008.0], [43.0, 10008.0], [43.1, 10017.0], [43.2, 10017.0], [43.3, 10017.0], [43.4, 10017.0], [43.5, 10028.0], [43.6, 10028.0], [43.7, 10028.0], [43.8, 10032.0], [43.9, 10032.0], [44.0, 10032.0], [44.1, 10038.0], [44.2, 10038.0], [44.3, 10038.0], [44.4, 10038.0], [44.5, 10056.0], [44.6, 10056.0], [44.7, 10056.0], [44.8, 10058.0], [44.9, 10058.0], [45.0, 10058.0], [45.1, 10066.0], [45.2, 10066.0], [45.3, 10066.0], [45.4, 10093.0], [45.5, 10093.0], [45.6, 10093.0], [45.7, 10093.0], [45.8, 10096.0], [45.9, 10096.0], [46.0, 10096.0], [46.1, 10106.0], [46.2, 10106.0], [46.3, 10106.0], [46.4, 10111.0], [46.5, 10111.0], [46.6, 10111.0], [46.7, 10111.0], [46.8, 10114.0], [46.9, 10114.0], [47.0, 10114.0], [47.1, 10127.0], [47.2, 10127.0], [47.3, 10127.0], [47.4, 10129.0], [47.5, 10129.0], [47.6, 10129.0], [47.7, 10130.0], [47.8, 10130.0], [47.9, 10130.0], [48.0, 10130.0], [48.1, 10131.0], [48.2, 10131.0], [48.3, 10131.0], [48.4, 10133.0], [48.5, 10133.0], [48.6, 10133.0], [48.7, 10150.0], [48.8, 10150.0], [48.9, 10150.0], [49.0, 10150.0], [49.1, 10171.0], [49.2, 10171.0], [49.3, 10171.0], [49.4, 10180.0], [49.5, 10180.0], [49.6, 10180.0], [49.7, 10191.0], [49.8, 10191.0], [49.9, 10191.0], [50.0, 10191.0], [50.1, 10212.0], [50.2, 10212.0], [50.3, 10212.0], [50.4, 10238.0], [50.5, 10238.0], [50.6, 10238.0], [50.7, 10256.0], [50.8, 10256.0], [50.9, 10256.0], [51.0, 10257.0], [51.1, 10257.0], [51.2, 10257.0], [51.3, 10257.0], [51.4, 10259.0], [51.5, 10259.0], [51.6, 10259.0], [51.7, 10286.0], [51.8, 10286.0], [51.9, 10286.0], [52.0, 10304.0], [52.1, 10304.0], [52.2, 10304.0], [52.3, 10304.0], [52.4, 10305.0], [52.5, 10305.0], [52.6, 10305.0], [52.7, 10306.0], [52.8, 10306.0], [52.9, 10306.0], [53.0, 10307.0], [53.1, 10307.0], [53.2, 10307.0], [53.3, 10308.0], [53.4, 10308.0], [53.5, 10308.0], [53.6, 10308.0], [53.7, 10342.0], [53.8, 10342.0], [53.9, 10342.0], [54.0, 10348.0], [54.1, 10348.0], [54.2, 10348.0], [54.3, 10358.0], [54.4, 10358.0], [54.5, 10358.0], [54.6, 10358.0], [54.7, 10388.0], [54.8, 10388.0], [54.9, 10388.0], [55.0, 10390.0], [55.1, 10390.0], [55.2, 10390.0], [55.3, 10403.0], [55.4, 10403.0], [55.5, 10403.0], [55.6, 10417.0], [55.7, 10417.0], [55.8, 10417.0], [55.9, 10417.0], [56.0, 10424.0], [56.1, 10424.0], [56.2, 10424.0], [56.3, 10456.0], [56.4, 10456.0], [56.5, 10456.0], [56.6, 10459.0], [56.7, 10459.0], [56.8, 10459.0], [56.9, 10459.0], [57.0, 10461.0], [57.1, 10461.0], [57.2, 10461.0], [57.3, 10466.0], [57.4, 10466.0], [57.5, 10466.0], [57.6, 10470.0], [57.7, 10470.0], [57.8, 10470.0], [57.9, 10508.0], [58.0, 10508.0], [58.1, 10508.0], [58.2, 10508.0], [58.3, 10514.0], [58.4, 10514.0], [58.5, 10514.0], [58.6, 10526.0], [58.7, 10526.0], [58.8, 10526.0], [58.9, 10542.0], [59.0, 10542.0], [59.1, 10542.0], [59.2, 10542.0], [59.3, 10575.0], [59.4, 10575.0], [59.5, 10575.0], [59.6, 10578.0], [59.7, 10578.0], [59.8, 10578.0], [59.9, 10582.0], [60.0, 10582.0], [60.1, 10582.0], [60.2, 10590.0], [60.3, 10590.0], [60.4, 10590.0], [60.5, 10590.0], [60.6, 10590.0], [60.7, 10590.0], [60.8, 10590.0], [60.9, 10598.0], [61.0, 10598.0], [61.1, 10598.0], [61.2, 10634.0], [61.3, 10634.0], [61.4, 10634.0], [61.5, 10634.0], [61.6, 10641.0], [61.7, 10641.0], [61.8, 10641.0], [61.9, 10659.0], [62.0, 10659.0], [62.1, 10659.0], [62.2, 10684.0], [62.3, 10684.0], [62.4, 10684.0], [62.5, 10684.0], [62.6, 10705.0], [62.7, 10705.0], [62.8, 10705.0], [62.9, 10720.0], [63.0, 10720.0], [63.1, 10720.0], [63.2, 10721.0], [63.3, 10721.0], [63.4, 10721.0], [63.5, 10724.0], [63.6, 10724.0], [63.7, 10724.0], [63.8, 10724.0], [63.9, 10725.0], [64.0, 10725.0], [64.1, 10725.0], [64.2, 10728.0], [64.3, 10728.0], [64.4, 10728.0], [64.5, 10756.0], [64.6, 10756.0], [64.7, 10756.0], [64.8, 10756.0], [64.9, 10767.0], [65.0, 10767.0], [65.1, 10767.0], [65.2, 10773.0], [65.3, 10773.0], [65.4, 10773.0], [65.5, 10778.0], [65.6, 10778.0], [65.7, 10778.0], [65.8, 10785.0], [65.9, 10785.0], [66.0, 10785.0], [66.1, 10785.0], [66.2, 10790.0], [66.3, 10790.0], [66.4, 10790.0], [66.5, 10811.0], [66.6, 10811.0], [66.7, 10811.0], [66.8, 10821.0], [66.9, 10821.0], [67.0, 10821.0], [67.1, 10821.0], [67.2, 10835.0], [67.3, 10835.0], [67.4, 10835.0], [67.5, 10839.0], [67.6, 10839.0], [67.7, 10839.0], [67.8, 10876.0], [67.9, 10876.0], [68.0, 10876.0], [68.1, 10878.0], [68.2, 10878.0], [68.3, 10878.0], [68.4, 10878.0], [68.5, 10883.0], [68.6, 10883.0], [68.7, 10883.0], [68.8, 10888.0], [68.9, 10888.0], [69.0, 10888.0], [69.1, 10897.0], [69.2, 10897.0], [69.3, 10897.0], [69.4, 10897.0], [69.5, 10904.0], [69.6, 10904.0], [69.7, 10904.0], [69.8, 10908.0], [69.9, 10908.0], [70.0, 10908.0], [70.1, 10970.0], [70.2, 10970.0], [70.3, 10970.0], [70.4, 10994.0], [70.5, 10994.0], [70.6, 10994.0], [70.7, 10994.0], [70.8, 11011.0], [70.9, 11011.0], [71.0, 11011.0], [71.1, 11061.0], [71.2, 11061.0], [71.3, 11061.0], [71.4, 11062.0], [71.5, 11062.0], [71.6, 11062.0], [71.7, 11062.0], [71.8, 11091.0], [71.9, 11091.0], [72.0, 11091.0], [72.1, 11093.0], [72.2, 11093.0], [72.3, 11093.0], [72.4, 11105.0], [72.5, 11105.0], [72.6, 11105.0], [72.7, 11115.0], [72.8, 11115.0], [72.9, 11115.0], [73.0, 11115.0], [73.1, 11128.0], [73.2, 11128.0], [73.3, 11128.0], [73.4, 11133.0], [73.5, 11133.0], [73.6, 11133.0], [73.7, 11141.0], [73.8, 11141.0], [73.9, 11141.0], [74.0, 11141.0], [74.1, 11151.0], [74.2, 11151.0], [74.3, 11151.0], [74.4, 11184.0], [74.5, 11184.0], [74.6, 11184.0], [74.7, 11206.0], [74.8, 11206.0], [74.9, 11206.0], [75.0, 11206.0], [75.1, 11215.0], [75.2, 11215.0], [75.3, 11215.0], [75.4, 11217.0], [75.5, 11217.0], [75.6, 11217.0], [75.7, 11220.0], [75.8, 11220.0], [75.9, 11220.0], [76.0, 11233.0], [76.1, 11233.0], [76.2, 11233.0], [76.3, 11233.0], [76.4, 11238.0], [76.5, 11238.0], [76.6, 11238.0], [76.7, 11294.0], [76.8, 11294.0], [76.9, 11294.0], [77.0, 11305.0], [77.1, 11305.0], [77.2, 11305.0], [77.3, 11305.0], [77.4, 11349.0], [77.5, 11349.0], [77.6, 11349.0], [77.7, 11366.0], [77.8, 11366.0], [77.9, 11366.0], [78.0, 11402.0], [78.1, 11402.0], [78.2, 11402.0], [78.3, 11410.0], [78.4, 11410.0], [78.5, 11410.0], [78.6, 11410.0], [78.7, 11435.0], [78.8, 11435.0], [78.9, 11435.0], [79.0, 11471.0], [79.1, 11471.0], [79.2, 11471.0], [79.3, 11494.0], [79.4, 11494.0], [79.5, 11494.0], [79.6, 11494.0], [79.7, 11497.0], [79.8, 11497.0], [79.9, 11497.0], [80.0, 11497.0], [80.1, 11497.0], [80.2, 11497.0], [80.3, 11503.0], [80.4, 11503.0], [80.5, 11503.0], [80.6, 11505.0], [80.7, 11505.0], [80.8, 11505.0], [80.9, 11505.0], [81.0, 11524.0], [81.1, 11524.0], [81.2, 11524.0], [81.3, 11550.0], [81.4, 11550.0], [81.5, 11550.0], [81.6, 11574.0], [81.7, 11574.0], [81.8, 11574.0], [81.9, 11574.0], [82.0, 11636.0], [82.1, 11636.0], [82.2, 11636.0], [82.3, 11640.0], [82.4, 11640.0], [82.5, 11640.0], [82.6, 11651.0], [82.7, 11651.0], [82.8, 11651.0], [82.9, 11666.0], [83.0, 11666.0], [83.1, 11666.0], [83.2, 11666.0], [83.3, 11692.0], [83.4, 11692.0], [83.5, 11692.0], [83.6, 11753.0], [83.7, 11753.0], [83.8, 11753.0], [83.9, 11782.0], [84.0, 11782.0], [84.1, 11782.0], [84.2, 11782.0], [84.3, 11796.0], [84.4, 11796.0], [84.5, 11796.0], [84.6, 11807.0], [84.7, 11807.0], [84.8, 11807.0], [84.9, 11837.0], [85.0, 11837.0], [85.1, 11837.0], [85.2, 11878.0], [85.3, 11878.0], [85.4, 11878.0], [85.5, 11878.0], [85.6, 11907.0], [85.7, 11907.0], [85.8, 11907.0], [85.9, 11927.0], [86.0, 11927.0], [86.1, 11927.0], [86.2, 11965.0], [86.3, 11965.0], [86.4, 11965.0], [86.5, 11965.0], [86.6, 11988.0], [86.7, 11988.0], [86.8, 11988.0], [86.9, 12040.0], [87.0, 12040.0], [87.1, 12040.0], [87.2, 12098.0], [87.3, 12098.0], [87.4, 12098.0], [87.5, 12098.0], [87.6, 12146.0], [87.7, 12146.0], [87.8, 12146.0], [87.9, 12156.0], [88.0, 12156.0], [88.1, 12156.0], [88.2, 12169.0], [88.3, 12169.0], [88.4, 12169.0], [88.5, 12232.0], [88.6, 12232.0], [88.7, 12232.0], [88.8, 12232.0], [88.9, 12369.0], [89.0, 12369.0], [89.1, 12369.0], [89.2, 12443.0], [89.3, 12443.0], [89.4, 12443.0], [89.5, 12491.0], [89.6, 12491.0], [89.7, 12491.0], [89.8, 12491.0], [89.9, 12575.0], [90.0, 12575.0], [90.1, 12575.0], [90.2, 12608.0], [90.3, 12608.0], [90.4, 12608.0], [90.5, 12691.0], [90.6, 12691.0], [90.7, 12691.0], [90.8, 12709.0], [90.9, 12709.0], [91.0, 12709.0], [91.1, 12709.0], [91.2, 12768.0], [91.3, 12768.0], [91.4, 12768.0], [91.5, 12781.0], [91.6, 12781.0], [91.7, 12781.0], [91.8, 12789.0], [91.9, 12789.0], [92.0, 12789.0], [92.1, 12789.0], [92.2, 12819.0], [92.3, 12819.0], [92.4, 12819.0], [92.5, 12836.0], [92.6, 12836.0], [92.7, 12836.0], [92.8, 12867.0], [92.9, 12867.0], [93.0, 12867.0], [93.1, 12901.0], [93.2, 12901.0], [93.3, 12901.0], [93.4, 12901.0], [93.5, 12908.0], [93.6, 12908.0], [93.7, 12908.0], [93.8, 12926.0], [93.9, 12926.0], [94.0, 12926.0], [94.1, 12929.0], [94.2, 12929.0], [94.3, 12929.0], [94.4, 12929.0], [94.5, 13136.0], [94.6, 13136.0], [94.7, 13136.0], [94.8, 13337.0], [94.9, 13337.0], [95.0, 13337.0], [95.1, 13443.0], [95.2, 13443.0], [95.3, 13443.0], [95.4, 13498.0], [95.5, 13498.0], [95.6, 13498.0], [95.7, 13498.0], [95.8, 13503.0], [95.9, 13503.0], [96.0, 13503.0], [96.1, 13625.0], [96.2, 13625.0], [96.3, 13625.0], [96.4, 13632.0], [96.5, 13632.0], [96.6, 13632.0], [96.7, 13632.0], [96.8, 13707.0], [96.9, 13707.0], [97.0, 13707.0], [97.1, 13708.0], [97.2, 13708.0], [97.3, 13708.0], [97.4, 13761.0], [97.5, 13761.0], [97.6, 13761.0], [97.7, 14176.0], [97.8, 14176.0], [97.9, 14176.0], [98.0, 14176.0], [98.1, 14189.0], [98.2, 14189.0], [98.3, 14189.0], [98.4, 14305.0], [98.5, 14305.0], [98.6, 14305.0], [98.7, 14476.0], [98.8, 14476.0], [98.9, 14476.0], [99.0, 14476.0], [99.1, 14997.0], [99.2, 14997.0], [99.3, 14997.0], [99.4, 15235.0], [99.5, 15235.0], [99.6, 15235.0], [99.7, 15441.0], [99.8, 15441.0], [99.9, 15441.0], [100.0, 15441.0]], "isOverall": false, "label": "CreateRatesAvailability", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 6700.0, "maxY": 12.0, "series": [{"data": [[6900.0, 3.0], [6800.0, 1.0], [6700.0, 1.0], [7000.0, 2.0], [7200.0, 1.0], [7300.0, 1.0], [7600.0, 1.0], [7500.0, 1.0], [7900.0, 1.0], [7800.0, 3.0], [7700.0, 1.0], [8100.0, 3.0], [8000.0, 2.0], [8700.0, 4.0], [8500.0, 2.0], [8400.0, 8.0], [8600.0, 5.0], [8200.0, 5.0], [8800.0, 6.0], [8900.0, 6.0], [9200.0, 12.0], [9100.0, 6.0], [9000.0, 9.0], [9500.0, 11.0], [9400.0, 6.0], [9700.0, 2.0], [9300.0, 5.0], [9600.0, 1.0], [9800.0, 9.0], [10000.0, 12.0], [10100.0, 12.0], [9900.0, 10.0], [10200.0, 6.0], [10300.0, 10.0], [10700.0, 12.0], [10400.0, 8.0], [10500.0, 10.0], [10600.0, 4.0], [10800.0, 9.0], [11000.0, 5.0], [11200.0, 7.0], [10900.0, 4.0], [11100.0, 7.0], [11500.0, 5.0], [11600.0, 5.0], [11700.0, 3.0], [11300.0, 3.0], [11400.0, 7.0], [12100.0, 3.0], [12000.0, 2.0], [12200.0, 1.0], [11800.0, 3.0], [11900.0, 4.0], [12700.0, 4.0], [12600.0, 2.0], [12400.0, 2.0], [12500.0, 1.0], [12300.0, 1.0], [12900.0, 4.0], [13100.0, 1.0], [13300.0, 1.0], [12800.0, 3.0], [13400.0, 2.0], [13700.0, 3.0], [13600.0, 2.0], [13500.0, 1.0], [14100.0, 2.0], [14300.0, 1.0], [14400.0, 1.0], [15200.0, 1.0], [14900.0, 1.0], [15400.0, 1.0]], "isOverall": false, "label": "CreateRatesAvailability", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 304.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 304.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 304.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.576140748E12, "maxY": 5.0, "series": [{"data": [[1.576141332E12, 5.0], [1.576140906E12, 5.0], [1.576141201E12, 5.0], [1.576141283E12, 5.0], [1.576141242E12, 5.0], [1.576141029E12, 5.0], [1.576141324E12, 5.0], [1.576140898E12, 5.0], [1.57614098E12, 5.0], [1.576140767E12, 5.0], [1.576141365E12, 4.0], [1.576141062E12, 5.0], [1.576141234E12, 5.0], [1.576140931E12, 5.0], [1.57614089E12, 5.0], [1.576141103E12, 5.0], [1.576140972E12, 5.0], [1.576141185E12, 5.0], [1.576141357E12, 5.0], [1.576141012E12, 5.0], [1.576141225E12, 5.0], [1.576140799E12, 5.0], [1.576141184E12, 5.0], [1.576141307E12, 5.0], [1.576140881E12, 5.0], [1.576141266E12, 5.0], [1.57614084E12, 5.0], [1.576141053E12, 5.0], [1.57614075E12, 5.0], [1.576141348E12, 5.0], [1.576140922E12, 5.0], [1.576141135E12, 5.0], [1.576141004E12, 5.0], [1.576141217E12, 5.0], [1.576141176E12, 5.0], [1.576141299E12, 5.0], [1.576140873E12, 5.0], [1.576141045E12, 5.0], [1.57614134E12, 5.0], [1.576141168E12, 5.0], [1.576141078E12, 5.0], [1.576141291E12, 5.0], [1.576140865E12, 5.0], [1.57614125E12, 5.0], [1.576140824E12, 5.0], [1.576141037E12, 5.0], [1.576141118E12, 5.0], [1.576140864E12, 5.0], [1.576141077E12, 5.0], [1.576140946E12, 5.0], [1.576141241E12, 5.0], [1.5761412E12, 5.0], [1.576141069E12, 5.0], [1.576140979E12, 5.0], [1.576141364E12, 5.0], [1.576140938E12, 5.0], [1.57614102E12, 5.0], [1.576141192E12, 5.0], [1.576141102E12, 5.0], [1.576141315E12, 5.0], [1.576141274E12, 5.0], [1.576140758E12, 5.0], [1.576141011E12, 5.0], [1.576140757E12, 5.0], [1.576141224E12, 5.0], [1.576140921E12, 5.0], [1.576140749E12, 5.0], [1.576141257E12, 5.0], [1.576140831E12, 5.0], [1.576141216E12, 5.0], [1.576141126E12, 5.0], [1.576141085E12, 5.0], [1.576140995E12, 5.0], [1.576140954E12, 5.0], [1.576141167E12, 5.0], [1.576141036E12, 5.0], [1.576141289E12, 5.0], [1.576141158E12, 5.0], [1.576140945E12, 5.0], [1.576140904E12, 5.0], [1.576140814E12, 5.0], [1.576141027E12, 5.0], [1.576140773E12, 5.0], [1.576140855E12, 5.0], [1.57614115E12, 5.0], [1.576140978E12, 5.0], [1.576141273E12, 5.0], [1.576141232E12, 5.0], [1.576141314E12, 5.0], [1.576141354E12, 5.0], [1.576141051E12, 5.0], [1.576141092E12, 5.0], [1.576141305E12, 5.0], [1.576140748E12, 5.0], [1.57614092E12, 5.0], [1.576140789E12, 5.0], [1.576141002E12, 5.0], [1.576141297E12, 5.0], [1.576140871E12, 5.0], [1.576141166E12, 5.0], [1.576141338E12, 5.0], [1.576140822E12, 5.0], [1.576141207E12, 5.0], [1.576140862E12, 5.0], [1.576141075E12, 5.0], [1.576141247E12, 5.0], [1.576140821E12, 5.0], [1.576141116E12, 5.0], [1.576141329E12, 5.0], [1.576141288E12, 5.0], [1.576141198E12, 5.0], [1.57614137E12, 1.0], [1.576140944E12, 5.0], [1.576141157E12, 5.0], [1.576140854E12, 5.0], [1.576141067E12, 5.0], [1.576141108E12, 5.0], [1.57614128E12, 5.0], [1.576141362E12, 5.0], [1.576141149E12, 5.0], [1.576141059E12, 5.0], [1.576140887E12, 5.0], [1.57614114E12, 5.0], [1.576141312E12, 5.0], [1.576141009E12, 5.0], [1.576140968E12, 5.0], [1.576141263E12, 5.0], [1.576141345E12, 5.0], [1.57614096E12, 5.0], [1.576141083E12, 5.0], [1.576141124E12, 5.0], [1.576140911E12, 5.0], [1.576141206E12, 5.0], [1.576140952E12, 5.0], [1.576141246E12, 5.0], [1.57614082E12, 5.0], [1.576141115E12, 5.0], [1.576141156E12, 5.0], [1.576141369E12, 2.0], [1.576141238E12, 5.0], [1.576140812E12, 5.0], [1.576140894E12, 5.0], [1.57614132E12, 5.0], [1.576141017E12, 5.0], [1.576140976E12, 5.0], [1.576141189E12, 5.0], [1.576141058E12, 5.0], [1.576141271E12, 5.0], [1.576140845E12, 5.0], [1.576140926E12, 5.0], [1.576141098E12, 5.0], [1.576141262E12, 5.0], [1.576141221E12, 5.0], [1.57614109E12, 5.0], [1.576141303E12, 5.0], [1.576140787E12, 5.0], [1.576140959E12, 5.0], [1.576141254E12, 5.0], [1.576141041E12, 5.0], [1.576141E12, 5.0], [1.57614091E12, 5.0], [1.576141295E12, 5.0], [1.576140779E12, 5.0], [1.576141336E12, 5.0], [1.576140991E12, 5.0], [1.576140778E12, 5.0], [1.576141286E12, 5.0], [1.576141073E12, 5.0], [1.576140942E12, 5.0], [1.576141155E12, 5.0], [1.576141327E12, 5.0], [1.576140901E12, 5.0], [1.576140811E12, 5.0], [1.576141196E12, 5.0], [1.576140983E12, 5.0], [1.576141368E12, 3.0], [1.576141278E12, 5.0], [1.576140852E12, 5.0], [1.576141065E12, 5.0], [1.576141237E12, 5.0], [1.576140934E12, 5.0], [1.576141147E12, 5.0], [1.576141106E12, 5.0], [1.576141319E12, 5.0], [1.576140893E12, 5.0], [1.576141188E12, 5.0], [1.57614136E12, 5.0], [1.576141229E12, 5.0], [1.576140884E12, 5.0], [1.576141097E12, 5.0], [1.576141269E12, 5.0], [1.576140966E12, 5.0], [1.576141179E12, 5.0], [1.576141138E12, 5.0], [1.576141351E12, 5.0], [1.576140835E12, 5.0], [1.576140876E12, 5.0], [1.576141048E12, 5.0], [1.576141261E12, 5.0], [1.576141171E12, 5.0], [1.576141343E12, 5.0], [1.576140827E12, 5.0], [1.576141212E12, 5.0], [1.576140999E12, 5.0], [1.576140786E12, 5.0], [1.576140868E12, 5.0], [1.57614104E12, 5.0], [1.576140909E12, 5.0], [1.576140777E12, 5.0], [1.57614099E12, 5.0], [1.576141203E12, 5.0], [1.576141162E12, 5.0], [1.576141031E12, 5.0], [1.576141113E12, 5.0], [1.576140941E12, 5.0], [1.576140851E12, 5.0], [1.576141064E12, 5.0], [1.576141277E12, 5.0], [1.576140761E12, 5.0], [1.576141187E12, 5.0], [1.576141359E12, 5.0], [1.576140933E12, 5.0], [1.576140843E12, 5.0], [1.576140842E12, 5.0], [1.576141055E12, 5.0], [1.57614135E12, 5.0], [1.576141309E12, 5.0], [1.576141178E12, 5.0], [1.576140875E12, 5.0], [1.576140916E12, 5.0], [1.576141129E12, 5.0], [1.576141088E12, 5.0], [1.576141252E12, 5.0], [1.57614103E12, 5.0], [1.576140989E12, 5.0], [1.576141284E12, 5.0], [1.576141022E12, 5.0], [1.576140768E12, 5.0], [1.576141194E12, 5.0], [1.576140932E12, 5.0], [1.576141145E12, 5.0], [1.576141227E12, 5.0], [1.57614076E12, 5.0], [1.5761408E12, 5.0], [1.576141308E12, 5.0], [1.576141095E12, 5.0], [1.576141177E12, 5.0], [1.576141136E12, 5.0], [1.576141046E12, 5.0], [1.576140833E12, 5.0], [1.576141005E12, 5.0], [1.576141128E12, 5.0], [1.576141341E12, 5.0], [1.57614121E12, 5.0], [1.576140866E12, 5.0]], "isOverall": false, "label": "GetRatesAvailability", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.57614137E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 6905.0, "minX": 1.0, "maxY": 10897.0, "series": [{"data": [[4.0, 8443.0], [2.0, 6905.0], [1.0, 10897.0], [5.0, 10352.05], [3.0, 7892.0]], "isOverall": false, "label": "CreateRatesAvailability", "isController": false}, {"data": [[4.967105263157895, 10328.131578947368]], "isOverall": false, "label": "CreateRatesAvailability-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 5.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 44185.0, "minX": 1.576140748E12, "maxY": 577408.0, "series": [{"data": [[1.576141332E12, 347731.0], [1.576140906E12, 218985.0], [1.576141201E12, 156184.0], [1.576141283E12, 167165.0], [1.576141242E12, 191453.0], [1.576141029E12, 219100.0], [1.576141324E12, 347535.0], [1.576140898E12, 358618.0], [1.57614098E12, 155582.0], [1.576140767E12, 323149.0], [1.576141365E12, 191727.0], [1.576141062E12, 156335.0], [1.576141234E12, 191336.0], [1.576140931E12, 167158.0], [1.57614089E12, 155650.0], [1.576141103E12, 156018.0], [1.576140972E12, 156266.0], [1.576141185E12, 191106.0], [1.576141357E12, 347004.0], [1.576141012E12, 166802.0], [1.576141225E12, 219094.0], [1.576140799E12, 311591.0], [1.576141184E12, 156065.0], [1.576141307E12, 191340.0], [1.576140881E12, 374793.0], [1.576141266E12, 167279.0], [1.57614084E12, 374686.0], [1.576141053E12, 155829.0], [1.57614075E12, 155710.0], [1.576141348E12, 191460.0], [1.576140922E12, 155711.0], [1.576141135E12, 156088.0], [1.576141004E12, 219357.0], [1.576141217E12, 167169.0], [1.576141176E12, 156204.0], [1.576141299E12, 155705.0], [1.576140873E12, 155944.0], [1.576141045E12, 156007.0], [1.57614134E12, 219226.0], [1.576141168E12, 155519.0], [1.576141078E12, 167237.0], [1.576141291E12, 167031.0], [1.576140865E12, 191399.0], [1.57614125E12, 219343.0], [1.576140824E12, 167161.0], [1.576141037E12, 191402.0], [1.576141118E12, 322744.0], [1.576140864E12, 156322.0], [1.576141077E12, 374934.0], [1.576140946E12, 156324.0], [1.576141241E12, 156078.0], [1.5761412E12, 219269.0], [1.576141069E12, 167202.0], [1.576140979E12, 191392.0], [1.576141364E12, 156016.0], [1.576140938E12, 155700.0], [1.57614102E12, 347073.0], [1.576141192E12, 156331.0], [1.576141102E12, 218985.0], [1.576141315E12, 191595.0], [1.576141274E12, 167289.0], [1.576140758E12, 191400.0], [1.576141011E12, 155640.0], [1.576140757E12, 322989.0], [1.576141224E12, 191462.0], [1.576140921E12, 358567.0], [1.576140749E12, 219425.0], [1.576141257E12, 167233.0], [1.576140831E12, 311778.0], [1.576141216E12, 155841.0], [1.576141126E12, 191652.0], [1.576141085E12, 191160.0], [1.576140995E12, 156353.0], [1.576140954E12, 347091.0], [1.576141167E12, 191360.0], [1.576141036E12, 156256.0], [1.576141289E12, 155765.0], [1.576141158E12, 155717.0], [1.576140945E12, 219225.0], [1.576140904E12, 155753.0], [1.576140814E12, 219174.0], [1.576141027E12, 155930.0], [1.576140773E12, 219293.0], [1.576140855E12, 167207.0], [1.57614115E12, 167355.0], [1.576140978E12, 167105.0], [1.576141273E12, 219164.0], [1.576141232E12, 156134.0], [1.576141314E12, 155610.0], [1.576141354E12, 167169.0], [1.576141051E12, 386405.0], [1.576141092E12, 156009.0], [1.576141305E12, 155883.0], [1.576140748E12, 514848.0], [1.57614092E12, 219288.0], [1.576140789E12, 514117.0], [1.576141002E12, 167112.0], [1.576141297E12, 191519.0], [1.576140871E12, 155770.0], [1.576141166E12, 375487.0], [1.576141338E12, 167095.0], [1.576140822E12, 191536.0], [1.576141207E12, 167224.0], [1.576140862E12, 155645.0], [1.576141075E12, 191342.0], [1.576141247E12, 167213.0], [1.576140821E12, 155946.0], [1.576141116E12, 191308.0], [1.576141329E12, 386523.0], [1.576141288E12, 191472.0], [1.576141198E12, 167421.0], [1.57614137E12, 219158.0], [1.576140944E12, 155890.0], [1.576141157E12, 191168.0], [1.576140854E12, 410873.0], [1.576141067E12, 155772.0], [1.576141108E12, 322872.0], [1.57614128E12, 155524.0], [1.576141362E12, 167096.0], [1.576141149E12, 155509.0], [1.576141059E12, 167103.0], [1.576140887E12, 358338.0], [1.57614114E12, 386464.0], [1.576141312E12, 167293.0], [1.576141009E12, 191188.0], [1.576140968E12, 155897.0], [1.576141263E12, 155849.0], [1.576141345E12, 166979.0], [1.57614096E12, 219351.0], [1.576141083E12, 156008.0], [1.576141124E12, 156145.0], [1.576140911E12, 155579.0], [1.576141206E12, 155828.0], [1.576140952E12, 167096.0], [1.576141246E12, 155662.0], [1.57614082E12, 155633.0], [1.576141115E12, 219169.0], [1.576141156E12, 156018.0], [1.576141369E12, 167345.0], [1.576141238E12, 386693.0], [1.576140812E12, 358538.0], [1.576140894E12, 156263.0], [1.57614132E12, 167223.0], [1.576141017E12, 375246.0], [1.576140976E12, 219357.0], [1.576141189E12, 218978.0], [1.576141058E12, 155570.0], [1.576141271E12, 346890.0], [1.576140845E12, 167106.0], [1.576140926E12, 155882.0], [1.576141098E12, 167038.0], [1.576141262E12, 191473.0], [1.576141221E12, 156067.0], [1.57614109E12, 219285.0], [1.576141303E12, 167030.0], [1.576140787E12, 156001.0], [1.576140959E12, 156012.0], [1.576141254E12, 155578.0], [1.576141041E12, 219170.0], [1.576141E12, 155776.0], [1.57614091E12, 191357.0], [1.576141295E12, 375239.0], [1.576140779E12, 155639.0], [1.576141336E12, 155656.0], [1.576140991E12, 374545.0], [1.576140778E12, 358511.0], [1.576141286E12, 156263.0], [1.576141073E12, 156142.0], [1.576140942E12, 191091.0], [1.576141155E12, 219086.0], [1.576141327E12, 155838.0], [1.576140901E12, 155633.0], [1.576140811E12, 311588.0], [1.576141196E12, 155711.0], [1.576140983E12, 156273.0], [1.576141368E12, 155583.0], [1.576141278E12, 191343.0], [1.576140852E12, 155941.0], [1.576141065E12, 191475.0], [1.576141237E12, 155959.0], [1.576140934E12, 219179.0], [1.576141147E12, 191581.0], [1.576141106E12, 191222.0], [1.576141319E12, 375061.0], [1.576140893E12, 219296.0], [1.576141188E12, 167215.0], [1.57614136E12, 155579.0], [1.576141229E12, 167226.0], [1.576140884E12, 155816.0], [1.576141097E12, 155837.0], [1.576141269E12, 156077.0], [1.576140966E12, 358430.0], [1.576141179E12, 167286.0], [1.576141138E12, 155764.0], [1.576141351E12, 374935.0], [1.576140835E12, 167232.0], [1.576140876E12, 167159.0], [1.576141048E12, 155836.0], [1.576141261E12, 375615.0], [1.576141171E12, 167353.0], [1.576141343E12, 155722.0], [1.576140827E12, 219101.0], [1.576141212E12, 410757.0], [1.576140999E12, 191532.0], [1.576140786E12, 219355.0], [1.576140868E12, 218845.0], [1.57614104E12, 322618.0], [1.576140909E12, 167101.0], [1.576140777E12, 156017.0], [1.57614099E12, 167099.0], [1.576141203E12, 191230.0], [1.576141162E12, 167350.0], [1.576141031E12, 167365.0], [1.576141113E12, 156056.0], [1.576140941E12, 167347.0], [1.576140851E12, 155649.0], [1.576141064E12, 219294.0], [1.576141277E12, 156020.0], [1.576140761E12, 219431.0], [1.576141187E12, 155708.0], [1.576141359E12, 219290.0], [1.576140933E12, 155902.0], [1.576140843E12, 191320.0], [1.576140842E12, 155745.0], [1.576141055E12, 191243.0], [1.57614135E12, 156197.0], [1.576141309E12, 155778.0], [1.576141178E12, 374871.0], [1.576140875E12, 191530.0], [1.576140916E12, 156275.0], [1.576141129E12, 167032.0], [1.576141088E12, 322987.0], [1.576141252E12, 347586.0], [1.57614103E12, 346510.0], [1.576140989E12, 191330.0], [1.576141284E12, 219163.0], [1.576141022E12, 167294.0], [1.576140768E12, 347059.0], [1.576141194E12, 191591.0], [1.576140932E12, 191527.0], [1.576141145E12, 156391.0], [1.576141227E12, 155705.0], [1.57614076E12, 155828.0], [1.5761408E12, 577408.0], [1.576141308E12, 219226.0], [1.576141095E12, 191239.0], [1.576141177E12, 191591.0], [1.576141136E12, 191160.0], [1.576141046E12, 191207.0], [1.576140833E12, 191653.0], [1.576141005E12, 156143.0], [1.576141128E12, 374802.0], [1.576141341E12, 347384.0], [1.57614121E12, 155895.0], [1.576140866E12, 167166.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.576141332E12, 88432.0], [1.576140906E12, 44221.0], [1.576141201E12, 44193.0], [1.576141283E12, 44201.0], [1.576141242E12, 44223.0], [1.576141029E12, 44214.0], [1.576141324E12, 88418.0], [1.576140898E12, 88439.0], [1.57614098E12, 44213.0], [1.576140767E12, 88404.0], [1.576141365E12, 44243.0], [1.576141062E12, 44233.0], [1.576141234E12, 44218.0], [1.576140931E12, 44207.0], [1.57614089E12, 44237.0], [1.576141103E12, 44217.0], [1.576140972E12, 44228.0], [1.576141185E12, 44217.0], [1.576141357E12, 88472.0], [1.576141012E12, 44232.0], [1.576141225E12, 44207.0], [1.576140799E12, 88449.0], [1.576141184E12, 44210.0], [1.576141307E12, 44218.0], [1.576140881E12, 88422.0], [1.576141266E12, 44219.0], [1.57614084E12, 88421.0], [1.576141053E12, 44224.0], [1.57614075E12, 44236.0], [1.576141348E12, 44219.0], [1.576140922E12, 44229.0], [1.576141135E12, 44241.0], [1.576141004E12, 44205.0], [1.576141217E12, 44220.0], [1.576141176E12, 44240.0], [1.576141299E12, 44202.0], [1.576140873E12, 44227.0], [1.576141045E12, 44201.0], [1.57614134E12, 44215.0], [1.576141168E12, 44220.0], [1.576141078E12, 44222.0], [1.576141291E12, 44192.0], [1.576140865E12, 44211.0], [1.57614125E12, 44229.0], [1.576140824E12, 44218.0], [1.576141037E12, 44215.0], [1.576141118E12, 88430.0], [1.576140864E12, 44221.0], [1.576141077E12, 88426.0], [1.576140946E12, 44222.0], [1.576141241E12, 44210.0], [1.5761412E12, 44188.0], [1.576141069E12, 44202.0], [1.576140979E12, 44192.0], [1.576141364E12, 44238.0], [1.576140938E12, 44214.0], [1.57614102E12, 88450.0], [1.576141192E12, 44227.0], [1.576141102E12, 44242.0], [1.576141315E12, 44232.0], [1.576141274E12, 44226.0], [1.576140758E12, 44224.0], [1.576141011E12, 44212.0], [1.576140757E12, 88412.0], [1.576141224E12, 44220.0], [1.576140921E12, 88437.0], [1.576140749E12, 44243.0], [1.576141257E12, 44232.0], [1.576140831E12, 88455.0], [1.576141216E12, 44226.0], [1.576141126E12, 44199.0], [1.576141085E12, 44197.0], [1.576140995E12, 44256.0], [1.576140954E12, 88416.0], [1.576141167E12, 44225.0], [1.576141036E12, 44218.0], [1.576141289E12, 44195.0], [1.576141158E12, 44223.0], [1.576140945E12, 44204.0], [1.576140904E12, 44227.0], [1.576140814E12, 44214.0], [1.576141027E12, 44215.0], [1.576140773E12, 44226.0], [1.576140855E12, 44188.0], [1.57614115E12, 44229.0], [1.576140978E12, 44221.0], [1.576141273E12, 44217.0], [1.576141232E12, 44220.0], [1.576141314E12, 44194.0], [1.576141354E12, 44226.0], [1.576141051E12, 88434.0], [1.576141092E12, 44219.0], [1.576141305E12, 44218.0], [1.576140748E12, 132680.0], [1.57614092E12, 44220.0], [1.576140789E12, 132609.0], [1.576141002E12, 44249.0], [1.576141297E12, 44208.0], [1.576140871E12, 44217.0], [1.576141166E12, 88414.0], [1.576141338E12, 44210.0], [1.576140822E12, 44218.0], [1.576141207E12, 44217.0], [1.576140862E12, 44217.0], [1.576141075E12, 44219.0], [1.576141247E12, 44203.0], [1.576140821E12, 44221.0], [1.576141116E12, 44229.0], [1.576141329E12, 88437.0], [1.576141288E12, 44216.0], [1.576141198E12, 44233.0], [1.57614137E12, 44210.0], [1.576140944E12, 44223.0], [1.576141157E12, 44221.0], [1.576140854E12, 88441.0], [1.576141067E12, 44210.0], [1.576141108E12, 88439.0], [1.57614128E12, 44223.0], [1.576141362E12, 44208.0], [1.576141149E12, 44216.0], [1.576141059E12, 44226.0], [1.576140887E12, 88436.0], [1.57614114E12, 88449.0], [1.576141312E12, 44235.0], [1.576141009E12, 44255.0], [1.576140968E12, 44201.0], [1.576141263E12, 44228.0], [1.576141345E12, 44219.0], [1.57614096E12, 44212.0], [1.576141083E12, 44224.0], [1.576141124E12, 44228.0], [1.576140911E12, 44206.0], [1.576141206E12, 44203.0], [1.576140952E12, 44220.0], [1.576141246E12, 44234.0], [1.57614082E12, 44210.0], [1.576141115E12, 44218.0], [1.576141156E12, 44235.0], [1.576141369E12, 44189.0], [1.576141238E12, 88449.0], [1.576140812E12, 88452.0], [1.576140894E12, 44220.0], [1.57614132E12, 44205.0], [1.576141017E12, 88450.0], [1.576140976E12, 44224.0], [1.576141189E12, 44226.0], [1.576141058E12, 44200.0], [1.576141271E12, 88424.0], [1.576140845E12, 44232.0], [1.576140926E12, 44221.0], [1.576141098E12, 44232.0], [1.576141262E12, 44234.0], [1.576141221E12, 44223.0], [1.57614109E12, 44219.0], [1.576141303E12, 44196.0], [1.576140787E12, 44194.0], [1.576140959E12, 44219.0], [1.576141254E12, 44219.0], [1.576141041E12, 44232.0], [1.576141E12, 44224.0], [1.57614091E12, 44216.0], [1.576141295E12, 88452.0], [1.576140779E12, 44201.0], [1.576141336E12, 44223.0], [1.576140991E12, 88425.0], [1.576140778E12, 88464.0], [1.576141286E12, 44225.0], [1.576141073E12, 44230.0], [1.576140942E12, 44209.0], [1.576141155E12, 44205.0], [1.576141327E12, 44222.0], [1.576140901E12, 44204.0], [1.576140811E12, 88446.0], [1.576141196E12, 44217.0], [1.576140983E12, 44215.0], [1.576141368E12, 44222.0], [1.576141278E12, 44209.0], [1.576140852E12, 44211.0], [1.576141065E12, 44226.0], [1.576141237E12, 44219.0], [1.576140934E12, 44231.0], [1.576141147E12, 44215.0], [1.576141106E12, 44226.0], [1.576141319E12, 88431.0], [1.576140893E12, 44238.0], [1.576141188E12, 44206.0], [1.57614136E12, 44200.0], [1.576141229E12, 44225.0], [1.576140884E12, 44214.0], [1.576141097E12, 44224.0], [1.576141269E12, 44230.0], [1.576140966E12, 88430.0], [1.576141179E12, 44204.0], [1.576141138E12, 44193.0], [1.576141351E12, 88429.0], [1.576140835E12, 44224.0], [1.576140876E12, 44200.0], [1.576141048E12, 44233.0], [1.576141261E12, 88434.0], [1.576141171E12, 44189.0], [1.576141343E12, 44229.0], [1.576140827E12, 44204.0], [1.576141212E12, 88432.0], [1.576140999E12, 44228.0], [1.576140786E12, 44225.0], [1.576140868E12, 44215.0], [1.57614104E12, 88429.0], [1.576140909E12, 44218.0], [1.576140777E12, 44210.0], [1.57614099E12, 44205.0], [1.576141203E12, 44203.0], [1.576141162E12, 44223.0], [1.576141031E12, 44231.0], [1.576141113E12, 44222.0], [1.576140941E12, 44207.0], [1.576140851E12, 44224.0], [1.576141064E12, 44222.0], [1.576141277E12, 44219.0], [1.576140761E12, 44246.0], [1.576141187E12, 44226.0], [1.576141359E12, 44233.0], [1.576140933E12, 44213.0], [1.576140843E12, 44204.0], [1.576140842E12, 44204.0], [1.576141055E12, 44225.0], [1.57614135E12, 44199.0], [1.576141309E12, 44224.0], [1.576141178E12, 88478.0], [1.576140875E12, 44211.0], [1.576140916E12, 44242.0], [1.576141129E12, 44209.0], [1.576141088E12, 88420.0], [1.576141252E12, 88416.0], [1.57614103E12, 88460.0], [1.576140989E12, 44211.0], [1.576141284E12, 44214.0], [1.576141022E12, 44232.0], [1.576140768E12, 88449.0], [1.576141194E12, 44210.0], [1.576140932E12, 44221.0], [1.576141145E12, 44204.0], [1.576141227E12, 44200.0], [1.57614076E12, 44198.0], [1.5761408E12, 132671.0], [1.576141308E12, 44202.0], [1.576141095E12, 44206.0], [1.576141177E12, 44225.0], [1.576141136E12, 44185.0], [1.576141046E12, 44210.0], [1.576140833E12, 44226.0], [1.576141005E12, 44245.0], [1.576141128E12, 88420.0], [1.576141341E12, 88425.0], [1.57614121E12, 44232.0], [1.576140866E12, 44216.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.57614137E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6750.0, "minX": 1.576140748E12, "maxY": 15441.0, "series": [{"data": [[1.576141332E12, 7684.0], [1.576140906E12, 12908.0], [1.576141201E12, 8859.0], [1.576141283E12, 9188.0], [1.576141242E12, 7841.0], [1.576141029E12, 11692.0], [1.576141324E12, 9201.5], [1.576140898E12, 10770.0], [1.57614098E12, 11907.0], [1.576140767E12, 9981.0], [1.576141365E12, 8443.0], [1.576141062E12, 8754.0], [1.576141234E12, 10514.0], [1.576140931E12, 10821.0], [1.57614089E12, 9294.0], [1.576141103E12, 10970.0], [1.576140972E12, 12491.0], [1.576141185E12, 8667.0], [1.576141357E12, 7904.0], [1.576141012E12, 10106.0], [1.576141225E12, 13707.0], [1.576140799E12, 11270.0], [1.576141184E12, 8492.0], [1.576141307E12, 10111.0], [1.576140881E12, 11862.5], [1.576141266E12, 9209.0], [1.57614084E12, 10884.0], [1.576141053E12, 7637.0], [1.57614075E12, 10358.0], [1.576141348E12, 6846.0], [1.576140922E12, 10904.0], [1.576141135E12, 10811.0], [1.576141004E12, 13503.0], [1.576141217E12, 10002.0], [1.576141176E12, 9325.0], [1.576141299E12, 9257.0], [1.576140873E12, 9285.0], [1.576141045E12, 8835.0], [1.57614134E12, 10388.0], [1.576141168E12, 10032.0], [1.576141078E12, 9450.0], [1.576141291E12, 8458.0], [1.576140865E12, 10508.0], [1.57614125E12, 11927.0], [1.576140824E12, 11837.0], [1.576141037E12, 7097.0], [1.576141118E12, 10649.0], [1.576140864E12, 11782.0], [1.576141077E12, 11508.0], [1.576140946E12, 8567.0], [1.576141241E12, 9045.0], [1.5761412E12, 10721.0], [1.576141069E12, 9357.0], [1.576140979E12, 12575.0], [1.576141364E12, 6750.0], [1.576140938E12, 11151.0], [1.57614102E12, 9713.5], [1.576141192E12, 8258.0], [1.576141102E12, 11988.0], [1.576141315E12, 8177.0], [1.576141274E12, 7844.0], [1.576140758E12, 10058.0], [1.576141011E12, 10790.0], [1.576140757E12, 9394.5], [1.576141224E12, 11091.0], [1.576140921E12, 11315.0], [1.576140749E12, 10342.0], [1.576141257E12, 9520.0], [1.576140831E12, 10849.5], [1.576141216E12, 9973.0], [1.576141126E12, 9526.0], [1.576141085E12, 9435.0], [1.576140995E12, 11878.0], [1.576140954E12, 10815.5], [1.576141167E12, 9959.0], [1.576141036E12, 9820.0], [1.576141289E12, 9628.0], [1.576141158E12, 9027.0], [1.576140945E12, 11640.0], [1.576140904E12, 10304.0], [1.576140814E12, 14189.0], [1.576141027E12, 9809.0], [1.576140773E12, 12040.0], [1.576140855E12, 10001.0], [1.57614115E12, 9820.0], [1.576140978E12, 11410.0], [1.576141273E12, 11349.0], [1.576141232E12, 10720.0], [1.576141314E12, 8929.0], [1.576141354E12, 8232.0], [1.576141051E12, 10354.0], [1.576141092E12, 9084.0], [1.576141305E12, 10238.0], [1.576140748E12, 9126.0], [1.57614092E12, 13632.0], [1.576140789E12, 10407.0], [1.576141002E12, 11238.0], [1.576141297E12, 8662.0], [1.576140871E12, 9071.0], [1.576141166E12, 10911.0], [1.576141338E12, 9745.0], [1.576140822E12, 9775.0], [1.576141207E12, 8612.0], [1.576140862E12, 10835.0], [1.576141075E12, 10724.0], [1.576141247E12, 9273.0], [1.576140821E12, 10093.0], [1.576141116E12, 10456.0], [1.576141329E12, 9492.5], [1.576141288E12, 10008.0], [1.576141198E12, 9932.0], [1.57614137E12, 10897.0], [1.576140944E12, 11217.0], [1.576141157E12, 9933.0], [1.576140854E12, 12769.0], [1.576141067E12, 8644.0], [1.576141108E12, 10098.0], [1.57614128E12, 8251.0], [1.576141362E12, 8702.0], [1.576141149E12, 10066.0], [1.576141059E12, 8414.0], [1.576140887E12, 10942.0], [1.57614114E12, 11855.5], [1.576141312E12, 9571.0], [1.576141009E12, 10257.0], [1.576140968E12, 13337.0], [1.576141263E12, 9281.0], [1.576141345E12, 7003.0], [1.57614096E12, 15235.0], [1.576141083E12, 10191.0], [1.576141124E12, 11011.0], [1.576140911E12, 10212.0], [1.576141206E12, 10259.0], [1.576140952E12, 11184.0], [1.576141246E12, 8448.0], [1.57614082E12, 9292.0], [1.576141115E12, 12369.0], [1.576141156E12, 10578.0], [1.576141369E12, 6905.0], [1.576141238E12, 10927.5], [1.576140812E12, 12475.0], [1.576140894E12, 9580.0], [1.57614132E12, 7593.0], [1.576141017E12, 12184.5], [1.576140976E12, 15441.0], [1.576141189E12, 11061.0], [1.576141058E12, 10526.0], [1.576141271E12, 8513.5], [1.576140845E12, 10038.0], [1.576140926E12, 10582.0], [1.576141098E12, 10056.0], [1.576141262E12, 10542.0], [1.576141221E12, 11574.0], [1.57614109E12, 13443.0], [1.576141303E12, 11206.0], [1.576140787E12, 9549.0], [1.576140959E12, 13136.0], [1.576141254E12, 8459.0], [1.576141041E12, 11965.0], [1.576141E12, 9465.0], [1.57614091E12, 12156.0], [1.576141295E12, 10044.5], [1.576140779E12, 10876.0], [1.576141336E12, 9300.0], [1.576140991E12, 13247.0], [1.576140778E12, 10508.0], [1.576141286E12, 9268.0], [1.576141073E12, 11141.0], [1.576140942E12, 9381.0], [1.576141155E12, 14305.0], [1.576141327E12, 8597.0], [1.576140901E12, 10150.0], [1.576140811E12, 11585.5], [1.576141196E12, 9232.0], [1.576140983E12, 11435.0], [1.576141368E12, 7892.0], [1.576141278E12, 7239.0], [1.576140852E12, 10131.0], [1.576141065E12, 9923.0], [1.576141237E12, 10114.0], [1.576140934E12, 13761.0], [1.576141147E12, 10459.0], [1.576141106E12, 10470.0], [1.576141319E12, 10407.5], [1.576140893E12, 11807.0], [1.576141188E12, 9087.0], [1.57614136E12, 8420.0], [1.576141229E12, 12098.0], [1.576140884E12, 11220.0], [1.576141097E12, 9200.0], [1.576141269E12, 7733.0], [1.576140966E12, 13034.0], [1.576141179E12, 8297.0], [1.576141138E12, 10461.0], [1.576141351E12, 9408.5], [1.576140835E12, 10994.0], [1.576140876E12, 10130.0], [1.576141048E12, 7936.0], [1.576141261E12, 10477.0], [1.576141171E12, 9215.0], [1.576141343E12, 6924.0], [1.576140827E12, 12929.0], [1.576141212E12, 10431.5], [1.576140999E12, 9888.0], [1.576140786E12, 12789.0], [1.576140868E12, 13498.0], [1.57614104E12, 9506.5], [1.576140909E12, 11305.0], [1.576140777E12, 9883.0], [1.57614099E12, 12901.0], [1.576141203E12, 9116.0], [1.576141162E12, 11503.0], [1.576141031E12, 9482.0], [1.576141113E12, 10348.0], [1.576140941E12, 9885.0], [1.576140851E12, 10878.0], [1.576141064E12, 12836.0], [1.576141277E12, 8121.0], [1.576140761E12, 12146.0], [1.576141187E12, 8435.0], [1.576141359E12, 8296.0], [1.576140933E12, 11494.0], [1.576140843E12, 10424.0], [1.576140842E12, 10778.0], [1.576141055E12, 8945.0], [1.57614135E12, 9505.0], [1.576141309E12, 10575.0], [1.576141178E12, 11104.0], [1.576140875E12, 10641.0], [1.576140916E12, 11402.0], [1.576141129E12, 11128.0], [1.576141088E12, 10299.5], [1.576141252E12, 9908.5], [1.57614103E12, 9705.0], [1.576140989E12, 10598.0], [1.576141284E12, 11105.0], [1.576141022E12, 10096.0], [1.576140768E12, 9095.0], [1.576141194E12, 8824.0], [1.576140932E12, 11636.0], [1.576141145E12, 10127.0], [1.576141227E12, 10728.0], [1.57614076E12, 10129.0], [1.5761408E12, 11923.666666666666], [1.576141308E12, 12691.0], [1.576141095E12, 10590.0], [1.576141177E12, 9927.0], [1.576141136E12, 10634.0], [1.576141046E12, 8925.0], [1.576140833E12, 11215.0], [1.576141005E12, 10180.0], [1.576141128E12, 11202.0], [1.576141341E12, 9154.0], [1.57614121E12, 8731.0], [1.576140866E12, 10888.0]], "isOverall": false, "label": "CreateRatesAvailability", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.57614137E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 5847.0, "minX": 1.576140748E12, "maxY": 14553.0, "series": [{"data": [[1.576141332E12, 6798.5], [1.576140906E12, 12025.0], [1.576141201E12, 8218.0], [1.576141283E12, 8556.0], [1.576141242E12, 7085.0], [1.576141029E12, 10805.0], [1.576141324E12, 8318.5], [1.576140898E12, 10072.0], [1.57614098E12, 11273.0], [1.576140767E12, 9338.5], [1.576141365E12, 7190.0], [1.576141062E12, 8119.0], [1.576141234E12, 9753.0], [1.576140931E12, 10180.0], [1.57614089E12, 8665.0], [1.576141103E12, 10339.0], [1.576140972E12, 11856.0], [1.576141185E12, 7899.0], [1.576141357E12, 7081.5], [1.576141012E12, 9470.0], [1.576141225E12, 12817.0], [1.576140799E12, 10637.0], [1.576141184E12, 7864.0], [1.576141307E12, 9114.0], [1.576140881E12, 11099.5], [1.576141266E12, 8577.0], [1.57614084E12, 10116.5], [1.576141053E12, 7003.0], [1.57614075E12, 9727.0], [1.576141348E12, 5847.0], [1.576140922E12, 10267.0], [1.576141135E12, 10176.0], [1.576141004E12, 12616.0], [1.576141217E12, 9368.0], [1.576141176E12, 8691.0], [1.576141299E12, 8621.0], [1.576140873E12, 8655.0], [1.576141045E12, 8197.0], [1.57614134E12, 9507.0], [1.576141168E12, 9401.0], [1.576141078E12, 8811.0], [1.576141291E12, 7825.0], [1.576140865E12, 9738.0], [1.57614125E12, 11045.0], [1.576140824E12, 11199.0], [1.576141037E12, 6340.0], [1.576141118E12, 10001.0], [1.576140864E12, 11150.0], [1.576141077E12, 10756.5], [1.576140946E12, 7932.0], [1.576141241E12, 8415.0], [1.5761412E12, 9823.0], [1.576141069E12, 8722.0], [1.576140979E12, 11814.0], [1.576141364E12, 6115.0], [1.576140938E12, 10525.0], [1.57614102E12, 9013.0], [1.576141192E12, 7620.0], [1.576141102E12, 11099.0], [1.576141315E12, 7171.0], [1.576141274E12, 7209.0], [1.576140758E12, 9301.0], [1.576141011E12, 10156.0], [1.576140757E12, 8752.0], [1.576141224E12, 10295.0], [1.576140921E12, 10612.0], [1.576140749E12, 9444.0], [1.576141257E12, 8885.0], [1.576140831E12, 10216.5], [1.576141216E12, 9345.0], [1.576141126E12, 8760.0], [1.576141085E12, 8659.0], [1.576140995E12, 11248.0], [1.576140954E12, 10117.5], [1.576141167E12, 9191.0], [1.576141036E12, 9187.0], [1.576141289E12, 8993.0], [1.576141158E12, 8396.0], [1.576140945E12, 10761.0], [1.576140904E12, 9674.0], [1.576140814E12, 13297.0], [1.576141027E12, 9173.0], [1.576140773E12, 11152.0], [1.576140855E12, 9364.0], [1.57614115E12, 9179.0], [1.576140978E12, 10766.0], [1.576141273E12, 10459.0], [1.576141232E12, 10086.0], [1.576141314E12, 8142.0], [1.576141354E12, 7588.0], [1.576141051E12, 9587.0], [1.576141092E12, 8455.0], [1.576141305E12, 9480.0], [1.576140748E12, 8448.0], [1.57614092E12, 12746.0], [1.576140789E12, 9730.666666666666], [1.576141002E12, 10591.0], [1.576141297E12, 7656.0], [1.576140871E12, 8427.0], [1.576141166E12, 10150.0], [1.576141338E12, 8856.0], [1.576140822E12, 9015.0], [1.576141207E12, 7968.0], [1.576140862E12, 10201.0], [1.576141075E12, 9959.0], [1.576141247E12, 8633.0], [1.576140821E12, 9462.0], [1.576141116E12, 9697.0], [1.576141329E12, 8612.5], [1.576141288E12, 9004.0], [1.576141198E12, 9293.0], [1.57614137E12, 10009.0], [1.576140944E12, 10582.0], [1.576141157E12, 9176.0], [1.576140854E12, 11929.5], [1.576141067E12, 8010.0], [1.576141108E12, 9459.5], [1.57614128E12, 7613.0], [1.576141362E12, 8067.0], [1.576141149E12, 9434.0], [1.576141059E12, 7770.0], [1.576140887E12, 10242.0], [1.57614114E12, 11079.5], [1.576141312E12, 8679.0], [1.576141009E12, 9479.0], [1.576140968E12, 12701.0], [1.576141263E12, 8650.0], [1.576141345E12, 6129.0], [1.57614096E12, 14348.0], [1.576141083E12, 9555.0], [1.576141124E12, 10371.0], [1.576140911E12, 9583.0], [1.576141206E12, 9618.0], [1.576140952E12, 10543.0], [1.576141246E12, 7817.0], [1.57614082E12, 8667.0], [1.576141115E12, 11486.0], [1.576141156E12, 9938.0], [1.576141369E12, 6270.0], [1.576141238E12, 10166.5], [1.576140812E12, 11780.5], [1.576140894E12, 8939.0], [1.57614132E12, 6715.0], [1.576141017E12, 11428.0], [1.576140976E12, 14553.0], [1.576141189E12, 10166.0], [1.576141058E12, 9881.0], [1.576141271E12, 7817.5], [1.576140845E12, 9394.0], [1.576140926E12, 9948.0], [1.576141098E12, 9408.0], [1.576141262E12, 9785.0], [1.576141221E12, 10939.0], [1.57614109E12, 12564.0], [1.576141303E12, 10321.0], [1.576140787E12, 8922.0], [1.576140959E12, 12505.0], [1.576141254E12, 7826.0], [1.576141041E12, 11072.0], [1.576141E12, 8834.0], [1.57614091E12, 11397.0], [1.576141295E12, 9224.0], [1.576140779E12, 10241.0], [1.576141336E12, 8660.0], [1.576140991E12, 12489.0], [1.576140778E12, 9806.0], [1.576141286E12, 8502.0], [1.576141073E12, 10505.0], [1.576140942E12, 8622.0], [1.576141155E12, 13413.0], [1.576141327E12, 7960.0], [1.576140901E12, 9509.0], [1.576140811E12, 10948.5], [1.576141196E12, 8608.0], [1.576140983E12, 10795.0], [1.576141368E12, 7127.0], [1.576141278E12, 6347.0], [1.576140852E12, 9489.0], [1.576141065E12, 9158.0], [1.576141237E12, 9484.0], [1.576140934E12, 12876.0], [1.576141147E12, 9702.0], [1.576141106E12, 9715.0], [1.576141319E12, 9638.5], [1.576140893E12, 10923.0], [1.576141188E12, 8446.0], [1.57614136E12, 7666.0], [1.576141229E12, 11463.0], [1.576140884E12, 10586.0], [1.576141097E12, 8565.0], [1.576141269E12, 6984.0], [1.576140966E12, 12332.0], [1.576141179E12, 7652.0], [1.576141138E12, 9827.0], [1.576141351E12, 8585.5], [1.576140835E12, 10357.0], [1.576140876E12, 9488.0], [1.576141048E12, 7293.0], [1.576141261E12, 9710.5], [1.576141171E12, 8582.0], [1.576141343E12, 6295.0], [1.576140827E12, 12047.0], [1.576141212E12, 9603.5], [1.576140999E12, 9125.0], [1.576140786E12, 11895.0], [1.576140868E12, 12616.0], [1.57614104E12, 8865.0], [1.576140909E12, 10659.0], [1.576140777E12, 9251.0], [1.57614099E12, 12267.0], [1.576141203E12, 8317.0], [1.576141162E12, 10872.0], [1.576141031E12, 8836.0], [1.576141113E12, 9716.0], [1.576140941E12, 9243.0], [1.576140851E12, 10239.0], [1.576141064E12, 11949.0], [1.576141277E12, 7356.0], [1.576140761E12, 11261.0], [1.576141187E12, 7794.0], [1.576141359E12, 7413.0], [1.576140933E12, 10861.0], [1.576140843E12, 9658.0], [1.576140842E12, 10142.0], [1.576141055E12, 8179.0], [1.57614135E12, 8852.0], [1.576141309E12, 9940.0], [1.576141178E12, 10343.5], [1.576140875E12, 9885.0], [1.576140916E12, 10775.0], [1.576141129E12, 10486.0], [1.576141088E12, 9668.5], [1.576141252E12, 9211.0], [1.57614103E12, 9002.0], [1.576140989E12, 9827.0], [1.576141284E12, 10214.0], [1.576141022E12, 9452.0], [1.576140768E12, 8394.0], [1.576141194E12, 8063.0], [1.576140932E12, 10872.0], [1.576141145E12, 9493.0], [1.576141227E12, 10099.0], [1.57614076E12, 9497.0], [1.5761408E12, 11166.0], [1.576141308E12, 11798.0], [1.576141095E12, 9833.0], [1.576141177E12, 9169.0], [1.576141136E12, 9875.0], [1.576141046E12, 8159.0], [1.576140833E12, 10448.0], [1.576141005E12, 9544.0], [1.576141128E12, 10436.5], [1.576141341E12, 8278.5], [1.57614121E12, 8094.0], [1.576140866E12, 10249.0]], "isOverall": false, "label": "CreateRatesAvailability", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.57614137E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 380.0, "minX": 1.576140748E12, "maxY": 411.0, "series": [{"data": [[1.576141332E12, 384.5], [1.576140906E12, 382.0], [1.576141201E12, 398.0], [1.576141283E12, 389.0], [1.576141242E12, 388.0], [1.576141029E12, 390.0], [1.576141324E12, 389.0], [1.576140898E12, 382.0], [1.57614098E12, 386.0], [1.576140767E12, 384.5], [1.576141365E12, 384.0], [1.576141062E12, 390.0], [1.576141234E12, 394.0], [1.576140931E12, 387.0], [1.57614089E12, 383.0], [1.576141103E12, 386.0], [1.576140972E12, 401.0], [1.576141185E12, 398.0], [1.576141357E12, 382.0], [1.576141012E12, 393.0], [1.576141225E12, 393.0], [1.576140799E12, 382.5], [1.576141184E12, 385.0], [1.576141307E12, 385.0], [1.576140881E12, 388.5], [1.576141266E12, 389.0], [1.57614084E12, 389.0], [1.576141053E12, 392.0], [1.57614075E12, 388.0], [1.576141348E12, 380.0], [1.576140922E12, 385.0], [1.576141135E12, 389.0], [1.576141004E12, 389.0], [1.576141217E12, 387.0], [1.576141176E12, 384.0], [1.576141299E12, 382.0], [1.576140873E12, 389.0], [1.576141045E12, 383.0], [1.57614134E12, 392.0], [1.576141168E12, 404.0], [1.576141078E12, 386.0], [1.576141291E12, 386.0], [1.576140865E12, 383.0], [1.57614125E12, 390.0], [1.576140824E12, 383.0], [1.576141037E12, 384.0], [1.576141118E12, 390.5], [1.576140864E12, 385.0], [1.576141077E12, 397.5], [1.576140946E12, 382.0], [1.576141241E12, 388.0], [1.5761412E12, 394.0], [1.576141069E12, 380.0], [1.576140979E12, 385.0], [1.576141364E12, 395.0], [1.576140938E12, 384.0], [1.57614102E12, 387.5], [1.576141192E12, 387.0], [1.576141102E12, 387.0], [1.576141315E12, 382.0], [1.576141274E12, 394.0], [1.576140758E12, 393.0], [1.576141011E12, 385.0], [1.576140757E12, 392.0], [1.576141224E12, 399.0], [1.576140921E12, 386.5], [1.576140749E12, 384.0], [1.576141257E12, 388.0], [1.576140831E12, 389.5], [1.576141216E12, 406.0], [1.576141126E12, 384.0], [1.576141085E12, 401.0], [1.576140995E12, 391.0], [1.576140954E12, 385.0], [1.576141167E12, 389.0], [1.576141036E12, 392.0], [1.576141289E12, 397.0], [1.576141158E12, 390.0], [1.576140945E12, 396.0], [1.576140904E12, 387.0], [1.576140814E12, 388.0], [1.576141027E12, 384.0], [1.576140773E12, 382.0], [1.576140855E12, 391.0], [1.57614115E12, 386.0], [1.576140978E12, 382.0], [1.576141273E12, 405.0], [1.576141232E12, 392.0], [1.576141314E12, 386.0], [1.576141354E12, 397.0], [1.576141051E12, 386.5], [1.576141092E12, 392.0], [1.576141305E12, 381.0], [1.576140748E12, 392.0], [1.57614092E12, 384.0], [1.576140789E12, 392.3333333333333], [1.576141002E12, 384.0], [1.576141297E12, 405.0], [1.576140871E12, 385.0], [1.576141166E12, 387.0], [1.576141338E12, 381.0], [1.576140822E12, 382.0], [1.576141207E12, 381.0], [1.576140862E12, 383.0], [1.576141075E12, 392.0], [1.576141247E12, 411.0], [1.576140821E12, 387.0], [1.576141116E12, 387.0], [1.576141329E12, 386.0], [1.576141288E12, 384.0], [1.576141198E12, 396.0], [1.57614137E12, 384.0], [1.576140944E12, 383.0], [1.576141157E12, 382.0], [1.576140854E12, 394.5], [1.576141067E12, 388.0], [1.576141108E12, 391.5], [1.57614128E12, 383.0], [1.576141362E12, 394.0], [1.576141149E12, 384.0], [1.576141059E12, 393.0], [1.576140887E12, 385.5], [1.57614114E12, 386.5], [1.576141312E12, 382.0], [1.576141009E12, 390.0], [1.576140968E12, 381.0], [1.576141263E12, 393.0], [1.576141345E12, 391.0], [1.57614096E12, 383.0], [1.576141083E12, 398.0], [1.576141124E12, 392.0], [1.576140911E12, 384.0], [1.576141206E12, 392.0], [1.576140952E12, 389.0], [1.576141246E12, 382.0], [1.57614082E12, 395.0], [1.576141115E12, 387.0], [1.576141156E12, 384.0], [1.576141369E12, 388.0], [1.576141238E12, 385.0], [1.576140812E12, 382.5], [1.576140894E12, 384.0], [1.57614132E12, 408.0], [1.576141017E12, 389.5], [1.576140976E12, 396.0], [1.576141189E12, 394.0], [1.576141058E12, 396.0], [1.576141271E12, 387.5], [1.576140845E12, 395.0], [1.576140926E12, 385.0], [1.576141098E12, 387.0], [1.576141262E12, 385.0], [1.576141221E12, 391.0], [1.57614109E12, 390.0], [1.576141303E12, 382.0], [1.576140787E12, 383.0], [1.576140959E12, 387.0], [1.576141254E12, 382.0], [1.576141041E12, 381.0], [1.576141E12, 384.0], [1.57614091E12, 388.0], [1.576141295E12, 396.0], [1.576140779E12, 385.0], [1.576141336E12, 400.0], [1.576140991E12, 385.0], [1.576140778E12, 391.5], [1.576141286E12, 403.0], [1.576141073E12, 388.0], [1.576140942E12, 390.0], [1.576141155E12, 385.0], [1.576141327E12, 391.0], [1.576140901E12, 383.0], [1.576140811E12, 384.0], [1.576141196E12, 404.0], [1.576140983E12, 386.0], [1.576141368E12, 386.0], [1.576141278E12, 385.0], [1.576140852E12, 404.0], [1.576141065E12, 385.0], [1.576141237E12, 385.0], [1.576140934E12, 393.0], [1.576141147E12, 381.0], [1.576141106E12, 384.0], [1.576141319E12, 393.0], [1.576140893E12, 384.0], [1.576141188E12, 384.0], [1.57614136E12, 387.0], [1.576141229E12, 394.0], [1.576140884E12, 384.0], [1.576141097E12, 387.0], [1.576141269E12, 392.0], [1.576140966E12, 395.5], [1.576141179E12, 392.0], [1.576141138E12, 396.0], [1.576141351E12, 381.5], [1.576140835E12, 385.0], [1.576140876E12, 390.0], [1.576141048E12, 389.0], [1.576141261E12, 391.5], [1.576141171E12, 393.0], [1.576141343E12, 398.0], [1.576140827E12, 383.0], [1.576141212E12, 398.5], [1.576140999E12, 392.0], [1.576140786E12, 382.0], [1.576140868E12, 383.0], [1.57614104E12, 386.0], [1.576140909E12, 391.0], [1.576140777E12, 389.0], [1.57614099E12, 395.0], [1.576141203E12, 385.0], [1.576141162E12, 381.0], [1.576141031E12, 385.0], [1.576141113E12, 387.0], [1.576140941E12, 384.0], [1.576140851E12, 383.0], [1.576141064E12, 394.0], [1.576141277E12, 389.0], [1.576140761E12, 392.0], [1.576141187E12, 403.0], [1.576141359E12, 383.0], [1.576140933E12, 389.0], [1.576140843E12, 387.0], [1.576140842E12, 386.0], [1.576141055E12, 391.0], [1.57614135E12, 381.0], [1.576141309E12, 387.0], [1.576141178E12, 385.5], [1.576140875E12, 390.0], [1.576140916E12, 386.0], [1.576141129E12, 398.0], [1.576141088E12, 384.5], [1.576141252E12, 394.0], [1.57614103E12, 385.5], [1.576140989E12, 388.0], [1.576141284E12, 395.0], [1.576141022E12, 385.0], [1.576140768E12, 398.5], [1.576141194E12, 389.0], [1.576140932E12, 388.0], [1.576141145E12, 387.0], [1.576141227E12, 385.0], [1.57614076E12, 396.0], [1.5761408E12, 386.0], [1.576141308E12, 386.0], [1.576141095E12, 387.0], [1.576141177E12, 396.0], [1.576141136E12, 400.0], [1.576141046E12, 390.0], [1.576140833E12, 386.0], [1.576141005E12, 400.0], [1.576141128E12, 382.5], [1.576141341E12, 385.0], [1.57614121E12, 402.0], [1.576140866E12, 393.0]], "isOverall": false, "label": "CreateRatesAvailability", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.57614137E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 6750.0, "minX": 1.576140748E12, "maxY": 15441.0, "series": [{"data": [[1.576141332E12, 8011.0], [1.576140906E12, 12908.0], [1.576141201E12, 8859.0], [1.576141283E12, 9188.0], [1.576141242E12, 7841.0], [1.576141029E12, 11692.0], [1.576141324E12, 9269.0], [1.576140898E12, 10773.0], [1.57614098E12, 11907.0], [1.576140767E12, 10028.0], [1.576141365E12, 8443.0], [1.576141062E12, 8754.0], [1.576141234E12, 10514.0], [1.576140931E12, 10821.0], [1.57614089E12, 9294.0], [1.576141103E12, 10970.0], [1.576140972E12, 12491.0], [1.576141185E12, 8667.0], [1.576141357E12, 8875.0], [1.576141012E12, 10106.0], [1.576141225E12, 13707.0], [1.576140799E12, 12232.0], [1.576141184E12, 8492.0], [1.576141307E12, 10111.0], [1.576140881E12, 13708.0], [1.576141266E12, 9209.0], [1.57614084E12, 12608.0], [1.576141053E12, 7637.0], [1.57614075E12, 10358.0], [1.576141348E12, 6846.0], [1.576140922E12, 10904.0], [1.576141135E12, 10811.0], [1.576141004E12, 13503.0], [1.576141217E12, 10002.0], [1.576141176E12, 9325.0], [1.576141299E12, 9257.0], [1.576140873E12, 9285.0], [1.576141045E12, 8835.0], [1.57614134E12, 10388.0], [1.576141168E12, 10032.0], [1.576141078E12, 9450.0], [1.576141291E12, 8458.0], [1.576140865E12, 10508.0], [1.57614125E12, 11927.0], [1.576140824E12, 11837.0], [1.576141037E12, 7097.0], [1.576141118E12, 10908.0], [1.576140864E12, 11782.0], [1.576141077E12, 12709.0], [1.576140946E12, 8567.0], [1.576141241E12, 9045.0], [1.5761412E12, 10721.0], [1.576141069E12, 9357.0], [1.576140979E12, 12575.0], [1.576141364E12, 6750.0], [1.576140938E12, 11151.0], [1.57614102E12, 10417.0], [1.576141192E12, 8258.0], [1.576141102E12, 11988.0], [1.576141315E12, 8177.0], [1.576141274E12, 7844.0], [1.576140758E12, 10058.0], [1.576141011E12, 10790.0], [1.576140757E12, 9866.0], [1.576141224E12, 11091.0], [1.576140921E12, 11497.0], [1.576140749E12, 10342.0], [1.576141257E12, 9520.0], [1.576140831E12, 11233.0], [1.576141216E12, 9973.0], [1.576141126E12, 9526.0], [1.576141085E12, 9435.0], [1.576140995E12, 11878.0], [1.576140954E12, 11753.0], [1.576141167E12, 9959.0], [1.576141036E12, 9820.0], [1.576141289E12, 9628.0], [1.576141158E12, 9027.0], [1.576140945E12, 11640.0], [1.576140904E12, 10304.0], [1.576140814E12, 14189.0], [1.576141027E12, 9809.0], [1.576140773E12, 12040.0], [1.576140855E12, 10001.0], [1.57614115E12, 9820.0], [1.576140978E12, 11410.0], [1.576141273E12, 11349.0], [1.576141232E12, 10720.0], [1.576141314E12, 8929.0], [1.576141354E12, 8232.0], [1.576141051E12, 10403.0], [1.576141092E12, 9084.0], [1.576141305E12, 10238.0], [1.576140748E12, 9532.0], [1.57614092E12, 13632.0], [1.576140789E12, 11093.0], [1.576141002E12, 11238.0], [1.576141297E12, 8662.0], [1.576140871E12, 9071.0], [1.576141166E12, 11651.0], [1.576141338E12, 9745.0], [1.576140822E12, 9775.0], [1.576141207E12, 8612.0], [1.576140862E12, 10835.0], [1.576141075E12, 10724.0], [1.576141247E12, 9273.0], [1.576140821E12, 10093.0], [1.576141116E12, 10456.0], [1.576141329E12, 10306.0], [1.576141288E12, 10008.0], [1.576141198E12, 9932.0], [1.57614137E12, 10897.0], [1.576140944E12, 11217.0], [1.576141157E12, 9933.0], [1.576140854E12, 14476.0], [1.576141067E12, 8644.0], [1.576141108E12, 10286.0], [1.57614128E12, 8251.0], [1.576141362E12, 8702.0], [1.576141149E12, 10066.0], [1.576141059E12, 8414.0], [1.576140887E12, 11294.0], [1.57614114E12, 12926.0], [1.576141312E12, 9571.0], [1.576141009E12, 10257.0], [1.576140968E12, 13337.0], [1.576141263E12, 9281.0], [1.576141345E12, 7003.0], [1.57614096E12, 15235.0], [1.576141083E12, 10191.0], [1.576141124E12, 11011.0], [1.576140911E12, 10212.0], [1.576141206E12, 10259.0], [1.576140952E12, 11184.0], [1.576141246E12, 8448.0], [1.57614082E12, 9292.0], [1.576141115E12, 12369.0], [1.576141156E12, 10578.0], [1.576141369E12, 6905.0], [1.576141238E12, 12768.0], [1.576140812E12, 12781.0], [1.576140894E12, 9580.0], [1.57614132E12, 7593.0], [1.576141017E12, 12819.0], [1.576140976E12, 15441.0], [1.576141189E12, 11061.0], [1.576141058E12, 10526.0], [1.576141271E12, 8884.0], [1.576140845E12, 10038.0], [1.576140926E12, 10582.0], [1.576141098E12, 10056.0], [1.576141262E12, 10542.0], [1.576141221E12, 11574.0], [1.57614109E12, 13443.0], [1.576141303E12, 11206.0], [1.576140787E12, 9549.0], [1.576140959E12, 13136.0], [1.576141254E12, 8459.0], [1.576141041E12, 11965.0], [1.576141E12, 9465.0], [1.57614091E12, 12156.0], [1.576141295E12, 11115.0], [1.576140779E12, 10876.0], [1.576141336E12, 9300.0], [1.576140991E12, 14997.0], [1.576140778E12, 10883.0], [1.576141286E12, 9268.0], [1.576141073E12, 11141.0], [1.576140942E12, 9381.0], [1.576141155E12, 14305.0], [1.576141327E12, 8597.0], [1.576140901E12, 10150.0], [1.576140811E12, 11666.0], [1.576141196E12, 9232.0], [1.576140983E12, 11435.0], [1.576141368E12, 7892.0], [1.576141278E12, 7239.0], [1.576140852E12, 10131.0], [1.576141065E12, 9923.0], [1.576141237E12, 10114.0], [1.576140934E12, 13761.0], [1.576141147E12, 10459.0], [1.576141106E12, 10470.0], [1.576141319E12, 11471.0], [1.576140893E12, 11807.0], [1.576141188E12, 9087.0], [1.57614136E12, 8420.0], [1.576141229E12, 12098.0], [1.576140884E12, 11220.0], [1.576141097E12, 9200.0], [1.576141269E12, 7733.0], [1.576140966E12, 13625.0], [1.576141179E12, 8297.0], [1.576141138E12, 10461.0], [1.576141351E12, 10725.0], [1.576140835E12, 10994.0], [1.576140876E12, 10130.0], [1.576141048E12, 7936.0], [1.576141261E12, 11366.0], [1.576141171E12, 9215.0], [1.576141343E12, 6924.0], [1.576140827E12, 12929.0], [1.576141212E12, 11796.0], [1.576140999E12, 9888.0], [1.576140786E12, 12789.0], [1.576140868E12, 13498.0], [1.57614104E12, 9992.0], [1.576140909E12, 11305.0], [1.576140777E12, 9883.0], [1.57614099E12, 12901.0], [1.576141203E12, 9116.0], [1.576141162E12, 11503.0], [1.576141031E12, 9482.0], [1.576141113E12, 10348.0], [1.576140941E12, 9885.0], [1.576140851E12, 10878.0], [1.576141064E12, 12836.0], [1.576141277E12, 8121.0], [1.576140761E12, 12146.0], [1.576141187E12, 8435.0], [1.576141359E12, 8296.0], [1.576140933E12, 11494.0], [1.576140843E12, 10424.0], [1.576140842E12, 10778.0], [1.576141055E12, 8945.0], [1.57614135E12, 9505.0], [1.576141309E12, 10575.0], [1.576141178E12, 11524.0], [1.576140875E12, 10641.0], [1.576140916E12, 11402.0], [1.576141129E12, 11128.0], [1.576141088E12, 10659.0], [1.576141252E12, 10256.0], [1.57614103E12, 9835.0], [1.576140989E12, 10598.0], [1.576141284E12, 11105.0], [1.576141022E12, 10096.0], [1.576140768E12, 9489.0], [1.576141194E12, 8824.0], [1.576140932E12, 11636.0], [1.576141145E12, 10127.0], [1.576141227E12, 10728.0], [1.57614076E12, 10129.0], [1.5761408E12, 14176.0], [1.576141308E12, 12691.0], [1.576141095E12, 10590.0], [1.576141177E12, 9927.0], [1.576141136E12, 10634.0], [1.576141046E12, 8925.0], [1.576140833E12, 11215.0], [1.576141005E12, 10180.0], [1.576141128E12, 12867.0], [1.576141341E12, 9193.0], [1.57614121E12, 8731.0], [1.576140866E12, 10888.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.576141332E12, 7357.0], [1.576140906E12, 12908.0], [1.576141201E12, 8859.0], [1.576141283E12, 9188.0], [1.576141242E12, 7841.0], [1.576141029E12, 11692.0], [1.576141324E12, 9134.0], [1.576140898E12, 10767.0], [1.57614098E12, 11907.0], [1.576140767E12, 9934.0], [1.576141365E12, 8443.0], [1.576141062E12, 8754.0], [1.576141234E12, 10514.0], [1.576140931E12, 10821.0], [1.57614089E12, 9294.0], [1.576141103E12, 10970.0], [1.576140972E12, 12491.0], [1.576141185E12, 8667.0], [1.576141357E12, 6933.0], [1.576141012E12, 10106.0], [1.576141225E12, 13707.0], [1.576140799E12, 10308.0], [1.576141184E12, 8492.0], [1.576141307E12, 10111.0], [1.576140881E12, 10017.0], [1.576141266E12, 9209.0], [1.57614084E12, 9160.0], [1.576141053E12, 7637.0], [1.57614075E12, 10358.0], [1.576141348E12, 6846.0], [1.576140922E12, 10904.0], [1.576141135E12, 10811.0], [1.576141004E12, 13503.0], [1.576141217E12, 10002.0], [1.576141176E12, 9325.0], [1.576141299E12, 9257.0], [1.576140873E12, 9285.0], [1.576141045E12, 8835.0], [1.57614134E12, 10388.0], [1.576141168E12, 10032.0], [1.576141078E12, 9450.0], [1.576141291E12, 8458.0], [1.576140865E12, 10508.0], [1.57614125E12, 11927.0], [1.576140824E12, 11837.0], [1.576141037E12, 7097.0], [1.576141118E12, 10390.0], [1.576140864E12, 11782.0], [1.576141077E12, 10307.0], [1.576140946E12, 8567.0], [1.576141241E12, 9045.0], [1.5761412E12, 10721.0], [1.576141069E12, 9357.0], [1.576140979E12, 12575.0], [1.576141364E12, 6750.0], [1.576140938E12, 11151.0], [1.57614102E12, 9010.0], [1.576141192E12, 8258.0], [1.576141102E12, 11988.0], [1.576141315E12, 8177.0], [1.576141274E12, 7844.0], [1.576140758E12, 10058.0], [1.576141011E12, 10790.0], [1.576140757E12, 8923.0], [1.576141224E12, 11091.0], [1.576140921E12, 11133.0], [1.576140749E12, 10342.0], [1.576141257E12, 9520.0], [1.576140831E12, 10466.0], [1.576141216E12, 9973.0], [1.576141126E12, 9526.0], [1.576141085E12, 9435.0], [1.576140995E12, 11878.0], [1.576140954E12, 9878.0], [1.576141167E12, 9959.0], [1.576141036E12, 9820.0], [1.576141289E12, 9628.0], [1.576141158E12, 9027.0], [1.576140945E12, 11640.0], [1.576140904E12, 10304.0], [1.576140814E12, 14189.0], [1.576141027E12, 9809.0], [1.576140773E12, 12040.0], [1.576140855E12, 10001.0], [1.57614115E12, 9820.0], [1.576140978E12, 11410.0], [1.576141273E12, 11349.0], [1.576141232E12, 10720.0], [1.576141314E12, 8929.0], [1.576141354E12, 8232.0], [1.576141051E12, 10305.0], [1.576141092E12, 9084.0], [1.576141305E12, 10238.0], [1.576140748E12, 8867.0], [1.57614092E12, 13632.0], [1.576140789E12, 9423.0], [1.576141002E12, 11238.0], [1.576141297E12, 8662.0], [1.576140871E12, 9071.0], [1.576141166E12, 10171.0], [1.576141338E12, 9745.0], [1.576140822E12, 9775.0], [1.576141207E12, 8612.0], [1.576140862E12, 10835.0], [1.576141075E12, 10724.0], [1.576141247E12, 9273.0], [1.576140821E12, 10093.0], [1.576141116E12, 10456.0], [1.576141329E12, 8679.0], [1.576141288E12, 10008.0], [1.576141198E12, 9932.0], [1.57614137E12, 10897.0], [1.576140944E12, 11217.0], [1.576141157E12, 9933.0], [1.576140854E12, 11062.0], [1.576141067E12, 8644.0], [1.576141108E12, 9910.0], [1.57614128E12, 8251.0], [1.576141362E12, 8702.0], [1.576141149E12, 10066.0], [1.576141059E12, 8414.0], [1.576140887E12, 10590.0], [1.57614114E12, 10785.0], [1.576141312E12, 9571.0], [1.576141009E12, 10257.0], [1.576140968E12, 13337.0], [1.576141263E12, 9281.0], [1.576141345E12, 7003.0], [1.57614096E12, 15235.0], [1.576141083E12, 10191.0], [1.576141124E12, 11011.0], [1.576140911E12, 10212.0], [1.576141206E12, 10259.0], [1.576140952E12, 11184.0], [1.576141246E12, 8448.0], [1.57614082E12, 9292.0], [1.576141115E12, 12369.0], [1.576141156E12, 10578.0], [1.576141369E12, 6905.0], [1.576141238E12, 9087.0], [1.576140812E12, 12169.0], [1.576140894E12, 9580.0], [1.57614132E12, 7593.0], [1.576141017E12, 11550.0], [1.576140976E12, 15441.0], [1.576141189E12, 11061.0], [1.576141058E12, 10526.0], [1.576141271E12, 8143.0], [1.576140845E12, 10038.0], [1.576140926E12, 10582.0], [1.576141098E12, 10056.0], [1.576141262E12, 10542.0], [1.576141221E12, 11574.0], [1.57614109E12, 13443.0], [1.576141303E12, 11206.0], [1.576140787E12, 9549.0], [1.576140959E12, 13136.0], [1.576141254E12, 8459.0], [1.576141041E12, 11965.0], [1.576141E12, 9465.0], [1.57614091E12, 12156.0], [1.576141295E12, 8974.0], [1.576140779E12, 10876.0], [1.576141336E12, 9300.0], [1.576140991E12, 11497.0], [1.576140778E12, 10133.0], [1.576141286E12, 9268.0], [1.576141073E12, 11141.0], [1.576140942E12, 9381.0], [1.576141155E12, 14305.0], [1.576141327E12, 8597.0], [1.576140901E12, 10150.0], [1.576140811E12, 11505.0], [1.576141196E12, 9232.0], [1.576140983E12, 11435.0], [1.576141368E12, 7892.0], [1.576141278E12, 7239.0], [1.576140852E12, 10131.0], [1.576141065E12, 9923.0], [1.576141237E12, 10114.0], [1.576140934E12, 13761.0], [1.576141147E12, 10459.0], [1.576141106E12, 10470.0], [1.576141319E12, 9344.0], [1.576140893E12, 11807.0], [1.576141188E12, 9087.0], [1.57614136E12, 8420.0], [1.576141229E12, 12098.0], [1.576140884E12, 11220.0], [1.576141097E12, 9200.0], [1.576141269E12, 7733.0], [1.576140966E12, 12443.0], [1.576141179E12, 8297.0], [1.576141138E12, 10461.0], [1.576141351E12, 8092.0], [1.576140835E12, 10994.0], [1.576140876E12, 10130.0], [1.576141048E12, 7936.0], [1.576141261E12, 9588.0], [1.576141171E12, 9215.0], [1.576141343E12, 6924.0], [1.576140827E12, 12929.0], [1.576141212E12, 9067.0], [1.576140999E12, 9888.0], [1.576140786E12, 12789.0], [1.576140868E12, 13498.0], [1.57614104E12, 9021.0], [1.576140909E12, 11305.0], [1.576140777E12, 9883.0], [1.57614099E12, 12901.0], [1.576141203E12, 9116.0], [1.576141162E12, 11503.0], [1.576141031E12, 9482.0], [1.576141113E12, 10348.0], [1.576140941E12, 9885.0], [1.576140851E12, 10878.0], [1.576141064E12, 12836.0], [1.576141277E12, 8121.0], [1.576140761E12, 12146.0], [1.576141187E12, 8435.0], [1.576141359E12, 8296.0], [1.576140933E12, 11494.0], [1.576140843E12, 10424.0], [1.576140842E12, 10778.0], [1.576141055E12, 8945.0], [1.57614135E12, 9505.0], [1.576141309E12, 10575.0], [1.576141178E12, 10684.0], [1.576140875E12, 10641.0], [1.576140916E12, 11402.0], [1.576141129E12, 11128.0], [1.576141088E12, 9940.0], [1.576141252E12, 9561.0], [1.57614103E12, 9575.0], [1.576140989E12, 10598.0], [1.576141284E12, 11105.0], [1.576141022E12, 10096.0], [1.576140768E12, 8701.0], [1.576141194E12, 8824.0], [1.576140932E12, 11636.0], [1.576141145E12, 10127.0], [1.576141227E12, 10728.0], [1.57614076E12, 10129.0], [1.5761408E12, 10756.0], [1.576141308E12, 12691.0], [1.576141095E12, 10590.0], [1.576141177E12, 9927.0], [1.576141136E12, 10634.0], [1.576141046E12, 8925.0], [1.576140833E12, 11215.0], [1.576141005E12, 10180.0], [1.576141128E12, 9537.0], [1.576141341E12, 9115.0], [1.57614121E12, 8731.0], [1.576140866E12, 10888.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.576141332E12, 12703.6], [1.576140906E12, 12836.6], [1.576141201E12, 12851.5], [1.576141283E12, 12784.2], [1.576141242E12, 12827.5], [1.576141029E12, 13353.100000000002], [1.576141324E12, 12720.800000000001], [1.576140898E12, 12786.6], [1.57614098E12, 13369.2], [1.576140767E12, 11609.600000000002], [1.576141365E12, 12601.4], [1.576141062E12, 12991.100000000002], [1.576141234E12, 12836.0], [1.576140931E12, 12836.6], [1.57614089E12, 12803.0], [1.576141103E12, 12914.300000000001], [1.576140972E12, 13256.600000000002], [1.576141185E12, 12880.6], [1.576141357E12, 12632.900000000001], [1.576141012E12, 13465.8], [1.576141225E12, 12848.4], [1.576140799E12, 12171.8], [1.576141184E12, 12884.0], [1.576141307E12, 12770.6], [1.576140881E12, 12859.0], [1.576141266E12, 12798.0], [1.57614084E12, 12784.2], [1.576141053E12, 13073.900000000003], [1.57614075E12, 10358.0], [1.576141348E12, 12682.700000000003], [1.576140922E12, 12860.400000000001], [1.576141135E12, 12897.6], [1.576141004E12, 13499.0], [1.576141217E12, 12830.9], [1.576141176E12, 12901.0], [1.576141299E12, 12774.5], [1.576140873E12, 12788.2], [1.576141045E12, 13176.2], [1.57614134E12, 12698.2], [1.576141168E12, 12902.4], [1.576141078E12, 12916.4], [1.576141291E12, 12779.7], [1.576140865E12, 12783.4], [1.57614125E12, 12822.4], [1.576140824E12, 12781.8], [1.576141037E12, 13256.600000000002], [1.576141118E12, 12904.5], [1.576140864E12, 12784.2], [1.576141077E12, 12918.5], [1.576140946E12, 12848.5], [1.576141241E12, 12829.2], [1.5761412E12, 12854.6], [1.576141069E12, 12926.9], [1.576140979E12, 13385.3], [1.576141364E12, 12604.7], [1.576140938E12, 12908.0], [1.57614102E12, 13401.400000000001], [1.576141192E12, 12867.0], [1.576141102E12, 12916.4], [1.576141315E12, 12750.300000000001], [1.576141274E12, 12787.4], [1.576140758E12, 10358.0], [1.576141011E12, 13481.900000000001], [1.576140757E12, 10358.0], [1.576141224E12, 12827.5], [1.576140921E12, 12872.300000000001], [1.576140749E12, 10342.0], [1.576141257E12, 12813.0], [1.576140831E12, 12787.4], [1.576141216E12, 12832.6], [1.576141126E12, 12903.1], [1.576141085E12, 12912.2], [1.576140995E12, 13433.600000000002], [1.576140954E12, 12812.800000000001], [1.576141167E12, 12903.1], [1.576141036E12, 13276.7], [1.576141289E12, 12781.0], [1.576141158E12, 12905.9], [1.576140945E12, 12860.400000000001], [1.576140904E12, 12785.0], [1.576140814E12, 12785.0], [1.576141027E12, 13369.2], [1.576140773E12, 12082.4], [1.576140855E12, 12785.8], [1.57614115E12, 12901.7], [1.576140978E12, 13401.400000000001], [1.576141273E12, 12788.2], [1.576141232E12, 12839.1], [1.576141314E12, 12756.2], [1.576141354E12, 12649.5], [1.576141051E12, 13094.599999999999], [1.576141092E12, 12924.800000000001], [1.576141305E12, 12771.9], [1.576140748E12, 9532.0], [1.57614092E12, 12896.1], [1.576140789E12, 12093.0], [1.576141002E12, 13385.3], [1.576141297E12, 12775.8], [1.576140871E12, 12789.0], [1.576141166E12, 12903.8], [1.576141338E12, 12700.0], [1.576140822E12, 12782.6], [1.576141207E12, 12842.2], [1.576140862E12, 12785.0], [1.576141075E12, 12922.7], [1.576141247E12, 12824.1], [1.576140821E12, 12783.4], [1.576141116E12, 12905.9], [1.576141329E12, 12707.2], [1.576141288E12, 12781.8], [1.576141198E12, 12857.7], [1.57614137E12, 12591.5], [1.576140944E12, 12872.300000000001], [1.576141157E12, 12906.6], [1.576140854E12, 12786.6], [1.576141067E12, 12929.0], [1.576141108E12, 12908.0], [1.57614128E12, 12785.0], [1.576141362E12, 12608.0], [1.576141149E12, 12902.4], [1.576141059E12, 13011.800000000001], [1.576140887E12, 12817.0], [1.57614114E12, 12904.5], [1.576141312E12, 12762.1], [1.576141009E12, 13498.0], [1.576140968E12, 13276.7], [1.576141263E12, 12801.0], [1.576141345E12, 12691.0], [1.57614096E12, 12929.0], [1.576141083E12, 12914.300000000001], [1.576141124E12, 12903.8], [1.576140911E12, 12800.900000000001], [1.576141206E12, 12845.300000000001], [1.576140952E12, 12836.6], [1.576141246E12, 12825.8], [1.57614082E12, 12784.2], [1.576141115E12, 12906.6], [1.576141156E12, 12907.3], [1.576141369E12, 12594.800000000001], [1.576141238E12, 12830.9], [1.576140812E12, 12561.400000000001], [1.576140894E12, 12788.2], [1.57614132E12, 12732.6], [1.576141017E12, 13433.600000000002], [1.576140976E12, 13417.5], [1.576141189E12, 12870.4], [1.576141058E12, 13032.5], [1.576141271E12, 12789.0], [1.576140845E12, 12781.8], [1.576140926E12, 12848.5], [1.576141098E12, 12918.5], [1.576141262E12, 12804.0], [1.576141221E12, 12829.2], [1.57614109E12, 12926.9], [1.576141303E12, 12773.2], [1.576140787E12, 12124.8], [1.576140959E12, 12910.1], [1.576141254E12, 12816.0], [1.576141041E12, 13196.3], [1.576141E12, 13401.400000000001], [1.57614091E12, 12812.800000000001], [1.576141295E12, 12777.1], [1.576140779E12, 12040.0], [1.576141336E12, 12701.8], [1.576140991E12, 13449.7], [1.576140778E12, 12050.6], [1.576141286E12, 12782.6], [1.576141073E12, 12924.800000000001], [1.576140942E12, 12884.199999999999], [1.576141155E12, 12908.0], [1.576141327E12, 12714.9], [1.576140901E12, 12785.8], [1.576140811E12, 12214.8], [1.576141196E12, 12860.800000000001], [1.576140983E12, 13353.100000000002], [1.576141368E12, 12598.1], [1.576141278E12, 12785.8], [1.576140852E12, 12763.699999999999], [1.576141065E12, 12949.699999999999], [1.576141237E12, 12834.3], [1.576140934E12, 12910.1], [1.576141147E12, 12903.1], [1.576141106E12, 12912.2], [1.576141319E12, 12738.5], [1.576140893E12, 12789.0], [1.576141188E12, 12873.800000000001], [1.57614136E12, 12616.300000000001], [1.576141229E12, 12842.2], [1.576140884E12, 12845.0], [1.576141097E12, 12920.6], [1.576141269E12, 12795.0], [1.576140966E12, 13094.599999999999], [1.576141179E12, 12887.4], [1.576141138E12, 12890.800000000001], [1.576141351E12, 12657.800000000001], [1.576140835E12, 12785.8], [1.576140876E12, 12786.6], [1.576141048E12, 13136.0], [1.576141261E12, 12807.0], [1.576141171E12, 12901.7], [1.576141343E12, 12692.800000000001], [1.576140827E12, 12789.0], [1.576141212E12, 12834.3], [1.576140999E12, 13417.5], [1.576140786E12, 12135.4], [1.576140868E12, 12803.0], [1.57614104E12, 13216.400000000001], [1.576140909E12, 12824.699999999999], [1.576140777E12, 12071.8], [1.57614099E12, 13316.900000000001], [1.576141203E12, 12848.4], [1.576141162E12, 12905.2], [1.576141031E12, 13296.8], [1.576141113E12, 12907.3], [1.576140941E12, 12896.1], [1.576140851E12, 12781.0], [1.576141064E12, 12970.400000000003], [1.576141277E12, 12786.6], [1.576140761E12, 11967.2], [1.576141187E12, 12877.2], [1.576141359E12, 12624.599999999999], [1.576140933E12, 12812.800000000001], [1.576140843E12, 12782.6], [1.576140842E12, 12783.4], [1.576141055E12, 13053.199999999999], [1.57614135E12, 12674.400000000001], [1.576141309E12, 12768.0], [1.576141178E12, 12890.800000000001], [1.576140875E12, 12787.4], [1.576140916E12, 12789.0], [1.576141129E12, 12901.0], [1.576141088E12, 12908.0], [1.576141252E12, 12819.0], [1.57614103E12, 13316.900000000001], [1.576140989E12, 13337.0], [1.576141284E12, 12783.4], [1.576141022E12, 13385.3], [1.576140768E12, 11252.0], [1.576141194E12, 12863.9], [1.576140932E12, 12824.699999999999], [1.576141145E12, 12903.8], [1.576141227E12, 12845.300000000001], [1.57614076E12, 10358.0], [1.5761408E12, 12232.0], [1.576141308E12, 12769.3], [1.576141095E12, 12922.7], [1.576141177E12, 12897.6], [1.576141136E12, 12894.2], [1.576141046E12, 13156.100000000002], [1.576140833E12, 12786.6], [1.576141005E12, 13498.5], [1.576141128E12, 12901.7], [1.576141341E12, 12694.6], [1.57614121E12, 12839.1], [1.576140866E12, 12782.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.576141332E12, 15037.460000000005], [1.576140906E12, 14476.0], [1.576141201E12, 15199.3], [1.576141283E12, 15101.72], [1.576141242E12, 15151.7], [1.576141029E12, 15381.259999999998], [1.576141324E12, 15049.359999999993], [1.576140898E12, 14476.0], [1.57614098E12, 15424.52], [1.576140767E12, 12146.0], [1.576141365E12, 14986.580000000009], [1.576141062E12, 15344.18], [1.576141234E12, 15163.599999999997], [1.576140931E12, 14476.0], [1.57614089E12, 14476.0], [1.576141103E12, 15302.980000000003], [1.576140972E12, 15204.639999999996], [1.576141185E12, 15220.72], [1.576141357E12, 15004.139999999994], [1.576141012E12, 15395.68], [1.576141225E12, 15173.120000000003], [1.576140799E12, 12789.0], [1.576141184E12, 15223.099999999997], [1.576141307E12, 15073.159999999998], [1.576140881E12, 14476.0], [1.576141266E12, 15123.14], [1.57614084E12, 14189.0], [1.576141053E12, 15352.419999999998], [1.57614075E12, 10358.0], [1.576141348E12, 15018.419999999995], [1.576140922E12, 14476.0], [1.576141135E12, 15274.14], [1.576141004E12, 15403.919999999998], [1.576141217E12, 15180.260000000002], [1.576141176E12, 15235.0], [1.576141299E12, 15080.300000000005], [1.576140873E12, 14476.0], [1.576141045E12, 15362.720000000001], [1.57614134E12, 15030.319999999996], [1.576141168E12, 15239.120000000003], [1.576141078E12, 15325.64], [1.576141291E12, 15089.819999999996], [1.576140865E12, 14476.0], [1.57614125E12, 15144.560000000001], [1.576140824E12, 14189.0], [1.576141037E12, 15370.96], [1.576141118E12, 15286.5], [1.576140864E12, 14476.0], [1.576141077E12, 15327.699999999997], [1.576140946E12, 14476.0], [1.576141241E12, 15154.08], [1.5761412E12, 15201.679999999997], [1.576141069E12, 15335.940000000002], [1.576140979E12, 15426.579999999998], [1.576141364E12, 14991.790000000005], [1.576140938E12, 14476.0], [1.57614102E12, 15387.439999999999], [1.576141192E12, 15211.2], [1.576141102E12, 15305.04], [1.576141315E12, 15061.259999999995], [1.576141274E12, 15111.239999999998], [1.576140758E12, 10358.0], [1.576141011E12, 15397.739999999998], [1.576140757E12, 10358.0], [1.576141224E12, 15175.5], [1.576140921E12, 14476.0], [1.576140749E12, 10342.0], [1.576141257E12, 15135.039999999995], [1.576140831E12, 14189.0], [1.576141216E12, 15182.64], [1.576141126E12, 15282.379999999997], [1.576141085E12, 15321.519999999997], [1.576140995E12, 15412.16], [1.576140954E12, 14476.0], [1.576141167E12, 15241.18], [1.576141036E12, 15373.019999999997], [1.576141289E12, 15092.199999999995], [1.576141158E12, 15249.419999999998], [1.576140945E12, 14476.0], [1.576140904E12, 14476.0], [1.576140814E12, 14189.0], [1.576141027E12, 15383.32], [1.576140773E12, 12146.0], [1.576140855E12, 14476.0], [1.57614115E12, 15257.659999999996], [1.576140978E12, 15428.64], [1.576141273E12, 15113.620000000003], [1.576141232E12, 15165.980000000001], [1.576141314E12, 15063.639999999994], [1.576141354E12, 15008.900000000003], [1.576141051E12, 15354.480000000003], [1.576141092E12, 15313.279999999999], [1.576141305E12, 15075.539999999995], [1.576140748E12, 9532.0], [1.57614092E12, 14476.0], [1.576140789E12, 12789.0], [1.576141002E12, 15405.98], [1.576141297E12, 15082.680000000004], [1.576140871E12, 14476.0], [1.576141166E12, 15243.239999999998], [1.576141338E12, 15032.699999999995], [1.576140822E12, 14189.0], [1.576141207E12, 15192.159999999998], [1.576140862E12, 14476.0], [1.576141075E12, 15331.82], [1.576141247E12, 15146.939999999999], [1.576140821E12, 14189.0], [1.576141116E12, 15290.620000000003], [1.576141329E12, 15042.22], [1.576141288E12, 15094.580000000005], [1.576141198E12, 15204.060000000001], [1.57614137E12, 14970.949999999993], [1.576140944E12, 14476.0], [1.576141157E12, 15251.479999999996], [1.576140854E12, 14476.0], [1.576141067E12, 15338.0], [1.576141108E12, 15296.800000000003], [1.57614128E12, 15104.099999999997], [1.576141362E12, 14997.0], [1.576141149E12, 15259.720000000001], [1.576141059E12, 15346.239999999998], [1.576140887E12, 14476.0], [1.57614114E12, 15265.900000000001], [1.576141312E12, 15066.020000000004], [1.576141009E12, 15399.8], [1.576140968E12, 15212.23], [1.576141263E12, 15125.519999999999], [1.576141345E12, 15020.800000000005], [1.57614096E12, 15235.0], [1.576141083E12, 15323.580000000002], [1.576141124E12, 15284.440000000002], [1.576140911E12, 14476.0], [1.576141206E12, 15194.539999999995], [1.576140952E12, 14476.0], [1.576141246E12, 15149.319999999996], [1.57614082E12, 14189.0], [1.576141115E12, 15292.68], [1.576141156E12, 15253.54], [1.576141369E12, 14976.159999999989], [1.576141238E12, 15156.459999999997], [1.576140812E12, 14176.0], [1.576140894E12, 14476.0], [1.57614132E12, 15054.120000000003], [1.576141017E12, 15391.560000000001], [1.576140976E12, 15430.7], [1.576141189E12, 15213.58], [1.576141058E12, 15348.300000000003], [1.576141271E12, 15116.0], [1.576140845E12, 14189.0], [1.576140926E12, 14476.0], [1.576141098E12, 15307.099999999999], [1.576141262E12, 15127.900000000003], [1.576141221E12, 15177.879999999997], [1.57614109E12, 15315.339999999997], [1.576141303E12, 15077.919999999995], [1.576140787E12, 12789.0], [1.576140959E12, 14476.0], [1.576141254E12, 15137.42], [1.576141041E12, 15364.779999999999], [1.576141E12, 15408.04], [1.57614091E12, 14476.0], [1.576141295E12, 15085.060000000001], [1.576140779E12, 12146.0], [1.576141336E12, 15035.080000000005], [1.576140991E12, 15414.220000000001], [1.576140778E12, 12146.0], [1.576141286E12, 15096.959999999997], [1.576141073E12, 15333.879999999997], [1.576140942E12, 14476.0], [1.576141155E12, 15255.599999999999], [1.576141327E12, 15046.979999999996], [1.576140901E12, 14476.0], [1.576140811E12, 14176.0], [1.576141196E12, 15206.439999999999], [1.576140983E12, 15422.46], [1.576141368E12, 14981.369999999984], [1.576141278E12, 15106.480000000001], [1.576140852E12, 14189.0], [1.576141065E12, 15340.059999999998], [1.576141237E12, 15161.22], [1.576140934E12, 14476.0], [1.576141147E12, 15261.779999999999], [1.576141106E12, 15300.919999999998], [1.576141319E12, 15056.5], [1.576140893E12, 14476.0], [1.576141188E12, 15215.959999999997], [1.57614136E12, 14999.379999999997], [1.576141229E12, 15168.36], [1.576140884E12, 14476.0], [1.576141097E12, 15309.159999999996], [1.576141269E12, 15120.760000000002], [1.576140966E12, 15219.820000000003], [1.576141179E12, 15225.480000000001], [1.576141138E12, 15270.019999999997], [1.576141351E12, 15011.28], [1.576140835E12, 14189.0], [1.576140876E12, 14476.0], [1.576141048E12, 15358.599999999999], [1.576141261E12, 15130.28], [1.576141171E12, 15237.059999999998], [1.576141343E12, 15023.180000000004], [1.576140827E12, 14189.0], [1.576141212E12, 15185.019999999999], [1.576140999E12, 15410.099999999999], [1.576140786E12, 12789.0], [1.576140868E12, 14476.0], [1.57614104E12, 15366.839999999997], [1.576140909E12, 14476.0], [1.576140777E12, 12146.0], [1.57614099E12, 15418.34], [1.576141203E12, 15196.92], [1.576141162E12, 15247.36], [1.576141031E12, 15375.080000000002], [1.576141113E12, 15294.739999999998], [1.576140941E12, 14476.0], [1.576140851E12, 14189.0], [1.576141064E12, 15342.120000000003], [1.576141277E12, 15108.86], [1.576140761E12, 12146.0], [1.576141187E12, 15218.340000000002], [1.576141359E12, 15001.759999999995], [1.576140933E12, 14476.0], [1.576140843E12, 14189.0], [1.576140842E12, 14189.0], [1.576141055E12, 15350.36], [1.57614135E12, 15016.039999999995], [1.576141309E12, 15068.400000000003], [1.576141178E12, 15227.86], [1.576140875E12, 14476.0], [1.576140916E12, 14476.0], [1.576141129E12, 15276.199999999997], [1.576141088E12, 15317.400000000001], [1.576141252E12, 15139.8], [1.57614103E12, 15377.14], [1.576140989E12, 15420.400000000001], [1.576141284E12, 15099.340000000002], [1.576141022E12, 15385.380000000001], [1.576140768E12, 12146.0], [1.576141194E12, 15208.819999999996], [1.576140932E12, 14476.0], [1.576141145E12, 15263.839999999997], [1.576141227E12, 15170.739999999998], [1.57614076E12, 10358.0], [1.5761408E12, 14176.0], [1.576141308E12, 15070.78], [1.576141095E12, 15311.220000000001], [1.576141177E12, 15232.620000000003], [1.576141136E12, 15272.080000000002], [1.576141046E12, 15360.659999999996], [1.576140833E12, 14189.0], [1.576141005E12, 15401.86], [1.576141128E12, 15278.260000000002], [1.576141341E12, 15025.560000000001], [1.57614121E12, 15189.78], [1.576140866E12, 14476.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.576141332E12, 13489.749999999998], [1.576140906E12, 13801.600000000002], [1.576141201E12, 13626.75], [1.576141283E12, 13527.399999999998], [1.576141242E12, 13626.75], [1.576141029E12, 13989.249999999998], [1.576141324E12, 13498.5], [1.576140898E12, 13871.799999999997], [1.57614098E12, 14009.999999999998], [1.576140767E12, 12146.0], [1.576141365E12, 13432.399999999998], [1.576141062E12, 13742.45], [1.576141234E12, 13628.5], [1.576140931E12, 13685.2], [1.57614089E12, 13965.399999999998], [1.576141103E12, 13681.4], [1.576140972E12, 13750.4], [1.576141185E12, 13629.9], [1.576141357E12, 13451.249999999998], [1.576141012E12, 14134.499999999996], [1.576141225E12, 13629.9], [1.576140799E12, 12594.05], [1.576141184E12, 13630.25], [1.576141307E12, 13501.0], [1.576140881E12, 14059.0], [1.576141266E12, 13582.299999999997], [1.57614084E12, 13801.899999999994], [1.576141053E12, 13753.05], [1.57614075E12, 10358.0], [1.576141348E12, 13467.75], [1.576140922E12, 13692.8], [1.576141135E12, 13631.65], [1.576141004E12, 14177.3], [1.576141217E12, 13606.699999999999], [1.576141176E12, 13632.0], [1.576141299E12, 13501.75], [1.576140873E12, 14142.099999999997], [1.576141045E12, 13802.499999999998], [1.57614134E12, 13481.5], [1.576141168E12, 13639.6], [1.576141078E12, 13718.599999999999], [1.576141291E12, 13502.75], [1.576140865E12, 14177.95], [1.57614125E12, 13625.7], [1.576140824E12, 14176.65], [1.576141037E12, 13885.499999999998], [1.576141118E12, 13651.0], [1.576140864E12, 14178.6], [1.576141077E12, 13721.25], [1.576140946E12, 13721.25], [1.576141241E12, 13627.1], [1.5761412E12, 13627.1], [1.576141069E12, 13731.849999999999], [1.576140979E12, 14030.749999999996], [1.576141364E12, 13437.699999999999], [1.576140938E12, 13734.5], [1.57614102E12, 14051.499999999995], [1.576141192E12, 13628.5], [1.576141102E12, 13685.199999999999], [1.576141315E12, 13499.75], [1.576141274E12, 13551.799999999997], [1.576140758E12, 10358.0], [1.576141011E12, 14155.249999999995], [1.576140757E12, 10358.0], [1.576141224E12, 13594.5], [1.576140921E12, 13696.6], [1.576140749E12, 10342.0], [1.576141257E12, 13612.799999999997], [1.576140831E12, 14051.299999999997], [1.576141216E12, 13612.799999999997], [1.576141126E12, 13643.4], [1.576141085E12, 13713.3], [1.576140995E12, 14179.9], [1.576140954E12, 13713.3], [1.576141167E12, 13643.399999999998], [1.576141036E12, 13906.249999999998], [1.576141289E12, 13503.0], [1.576141158E12, 13658.6], [1.576140945E12, 13723.9], [1.576140904E12, 13825.0], [1.576140814E12, 14179.25], [1.576141027E12, 14009.999999999998], [1.576140773E12, 12146.0], [1.576140855E12, 14179.9], [1.57614115E12, 13628.85], [1.576140978E12, 14051.499999999995], [1.576141273E12, 13557.899999999998], [1.576141232E12, 13628.85], [1.576141314E12, 13500.0], [1.576141354E12, 13456.75], [1.576141051E12, 13755.7], [1.576141092E12, 13700.4], [1.576141305E12, 13501.25], [1.576140748E12, 9532.0], [1.57614092E12, 13704.2], [1.576140789E12, 12628.25], [1.576141002E12, 14177.95], [1.576141297E12, 13502.0], [1.576140871E12, 14176.0], [1.576141166E12, 13647.199999999999], [1.576141338E12, 13484.25], [1.576140822E12, 14177.3], [1.576141207E12, 13625.7], [1.576140862E12, 14179.25], [1.576141075E12, 13726.55], [1.576141247E12, 13626.05], [1.576140821E12, 14177.95], [1.576141116E12, 13658.6], [1.576141329E12, 13495.25], [1.576141288E12, 13509.099999999999], [1.576141198E12, 13627.45], [1.57614137E12, 13416.5], [1.576140944E12, 13726.55], [1.576141157E12, 13662.399999999998], [1.576140854E12, 14180.55], [1.576141067E12, 13734.5], [1.576141108E12, 13670.0], [1.57614128E12, 13533.5], [1.576141362E12, 13443.0], [1.576141149E12, 13629.2], [1.576141059E12, 13745.099999999999], [1.576140887E12, 13988.799999999997], [1.57614114E12, 13630.25], [1.576141312E12, 13500.25], [1.576141009E12, 14176.0], [1.576140968E12, 13753.05], [1.576141263E12, 13588.399999999998], [1.576141345E12, 13470.5], [1.57614096E12, 13761.0], [1.576141083E12, 13715.95], [1.576141124E12, 13647.199999999999], [1.576140911E12, 13731.399999999998], [1.576141206E12, 13626.05], [1.576140952E12, 13718.599999999999], [1.576141246E12, 13626.4], [1.57614082E12, 14178.6], [1.576141115E12, 13662.4], [1.576141156E12, 13666.199999999999], [1.576141369E12, 13421.800000000001], [1.576141238E12, 13627.45], [1.576140812E12, 13205.099999999997], [1.576140894E12, 13918.600000000002], [1.57614132E12, 13499.0], [1.576141017E12, 14092.999999999998], [1.576140976E12, 14072.25], [1.576141189E12, 13628.85], [1.576141058E12, 13747.75], [1.576141271E12, 13564.0], [1.576140845E12, 13614.849999999997], [1.576140926E12, 13689.0], [1.576141098E12, 13689.0], [1.576141262E12, 13594.5], [1.576141221E12, 13600.599999999999], [1.57614109E12, 13704.199999999999], [1.576141303E12, 13501.5], [1.576140787E12, 12724.699999999999], [1.576140959E12, 13710.65], [1.576141254E12, 13618.899999999998], [1.576141041E12, 13823.250000000002], [1.576141E12, 14178.6], [1.57614091E12, 13754.799999999997], [1.576141295E12, 13502.25], [1.576140779E12, 12146.0], [1.576141336E12, 13487.0], [1.576140991E12, 14180.55], [1.576140778E12, 12146.0], [1.576141286E12, 13515.199999999999], [1.576141073E12, 13729.2], [1.576140942E12, 13729.199999999999], [1.576141155E12, 13670.0], [1.576141327E12, 13498.25], [1.576140901E12, 13848.399999999998], [1.576140811E12, 13343.799999999997], [1.576141196E12, 13627.8], [1.576140983E12, 13989.249999999998], [1.576141368E12, 13427.099999999997], [1.576141278E12, 13539.599999999999], [1.576140852E12, 13490.149999999994], [1.576141065E12, 13737.15], [1.576141237E12, 13628.15], [1.576140934E12, 13737.15], [1.576141147E12, 13629.55], [1.576141106E12, 13677.6], [1.576141319E12, 13499.25], [1.576140893E12, 13942.0], [1.576141188E12, 13629.2], [1.57614136E12, 13445.75], [1.576141229E12, 13629.2], [1.576140884E12, 14035.599999999999], [1.576141097E12, 13692.8], [1.576141269E12, 13576.199999999999], [1.576140966E12, 13755.699999999999], [1.576141179E12, 13630.6], [1.576141138E12, 13630.95], [1.576141351E12, 13459.5], [1.576140835E12, 13926.599999999997], [1.576140876E12, 14074.299999999996], [1.576141048E12, 13761.0], [1.576141261E12, 13600.599999999999], [1.576141171E12, 13635.8], [1.576141343E12, 13473.25], [1.576140827E12, 14176.0], [1.576141212E12, 13618.899999999998], [1.576140999E12, 14179.25], [1.576140786E12, 12756.85], [1.576140868E12, 14176.65], [1.57614104E12, 13843.999999999995], [1.576140909E12, 13778.199999999995], [1.576140777E12, 12146.0], [1.57614099E12, 13947.749999999995], [1.576141203E12, 13626.4], [1.576141162E12, 13654.8], [1.576141031E12, 13926.999999999996], [1.576141113E12, 13666.199999999999], [1.576140941E12, 13731.85], [1.576140851E12, 13552.5], [1.576141064E12, 13739.8], [1.576141277E12, 13545.699999999999], [1.576140761E12, 12146.0], [1.576141187E12, 13629.55], [1.576141359E12, 13448.499999999998], [1.576140933E12, 13677.6], [1.576140843E12, 13677.199999999993], [1.576140842E12, 13739.549999999997], [1.576141055E12, 13750.4], [1.57614135E12, 13464.999999999998], [1.576141309E12, 13500.5], [1.576141178E12, 13630.95], [1.576140875E12, 14108.199999999999], [1.576140916E12, 13708.0], [1.576141129E12, 13632.0], [1.576141088E12, 13708.0], [1.576141252E12, 13625.0], [1.57614103E12, 13947.749999999995], [1.576140989E12, 13968.5], [1.576141284E12, 13521.299999999997], [1.576141022E12, 14030.749999999996], [1.576140768E12, 12146.0], [1.576141194E12, 13628.15], [1.576140932E12, 13681.4], [1.576141145E12, 13629.9], [1.576141227E12, 13629.55], [1.57614076E12, 10358.0], [1.5761408E12, 13482.5], [1.576141308E12, 13500.75], [1.576141095E12, 13696.6], [1.576141177E12, 13631.65], [1.576141136E12, 13631.3], [1.576141046E12, 13781.749999999993], [1.576140833E12, 13988.950000000003], [1.576141005E12, 14176.65], [1.576141128E12, 13635.8], [1.576141341E12, 13475.999999999998], [1.57614121E12, 13625.35], [1.576140866E12, 14177.3]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.57614137E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 10201.5, "minX": 1000.0, "maxY": 10201.5, "series": [{"data": [[1000.0, 10201.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 1000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 9502.0, "minX": 1000.0, "maxY": 9502.0, "series": [{"data": [[1000.0, 9502.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 1000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.576140738E12, "maxY": 4.0, "series": [{"data": [[1.576141332E12, 2.0], [1.576140906E12, 1.0], [1.576141201E12, 1.0], [1.576141283E12, 1.0], [1.576141242E12, 1.0], [1.576141029E12, 1.0], [1.576141324E12, 2.0], [1.576140898E12, 2.0], [1.57614098E12, 1.0], [1.576140767E12, 2.0], [1.576141062E12, 1.0], [1.576141234E12, 1.0], [1.576140931E12, 1.0], [1.57614089E12, 1.0], [1.576141103E12, 1.0], [1.576140972E12, 1.0], [1.576141185E12, 1.0], [1.576141357E12, 2.0], [1.576141012E12, 1.0], [1.576141225E12, 1.0], [1.576140799E12, 2.0], [1.576141184E12, 1.0], [1.576141307E12, 1.0], [1.576140881E12, 2.0], [1.576141266E12, 1.0], [1.57614084E12, 2.0], [1.576141053E12, 1.0], [1.57614075E12, 1.0], [1.576141348E12, 1.0], [1.576140922E12, 1.0], [1.576141135E12, 1.0], [1.576141004E12, 1.0], [1.576141217E12, 1.0], [1.576141176E12, 1.0], [1.576141299E12, 1.0], [1.576140873E12, 1.0], [1.576141045E12, 1.0], [1.57614134E12, 1.0], [1.576141168E12, 1.0], [1.576141078E12, 1.0], [1.576141291E12, 1.0], [1.576140865E12, 1.0], [1.57614125E12, 1.0], [1.576140824E12, 1.0], [1.576141037E12, 1.0], [1.576141118E12, 2.0], [1.576140864E12, 1.0], [1.576141077E12, 2.0], [1.576140946E12, 1.0], [1.576141241E12, 1.0], [1.5761412E12, 1.0], [1.576141069E12, 1.0], [1.576140979E12, 1.0], [1.576140938E12, 1.0], [1.57614102E12, 2.0], [1.576141192E12, 1.0], [1.576141102E12, 1.0], [1.576141315E12, 1.0], [1.576141274E12, 1.0], [1.576140758E12, 1.0], [1.576141011E12, 1.0], [1.576140757E12, 2.0], [1.576141224E12, 1.0], [1.576140921E12, 2.0], [1.576141306E12, 1.0], [1.576140749E12, 1.0], [1.576141257E12, 1.0], [1.576140831E12, 2.0], [1.576141216E12, 1.0], [1.576141126E12, 1.0], [1.576141085E12, 1.0], [1.576140995E12, 1.0], [1.576140954E12, 2.0], [1.576141167E12, 1.0], [1.576141036E12, 1.0], [1.576141289E12, 1.0], [1.576141158E12, 1.0], [1.576140945E12, 1.0], [1.576140904E12, 1.0], [1.576140814E12, 1.0], [1.576141027E12, 1.0], [1.576140773E12, 1.0], [1.576140855E12, 1.0], [1.57614115E12, 1.0], [1.576140978E12, 1.0], [1.576141273E12, 1.0], [1.576141232E12, 1.0], [1.576141314E12, 1.0], [1.576141354E12, 1.0], [1.576141051E12, 2.0], [1.576141092E12, 1.0], [1.576140748E12, 3.0], [1.57614092E12, 1.0], [1.576140789E12, 3.0], [1.576141002E12, 1.0], [1.576141297E12, 1.0], [1.576140871E12, 1.0], [1.576141166E12, 2.0], [1.576140953E12, 1.0], [1.576141338E12, 1.0], [1.576141125E12, 1.0], [1.576140822E12, 1.0], [1.576141207E12, 1.0], [1.576140862E12, 1.0], [1.576141075E12, 1.0], [1.576141247E12, 1.0], [1.576140821E12, 1.0], [1.576141116E12, 1.0], [1.576141329E12, 2.0], [1.576141288E12, 1.0], [1.576141198E12, 1.0], [1.576140944E12, 1.0], [1.576141157E12, 1.0], [1.576140854E12, 2.0], [1.576141067E12, 1.0], [1.576141108E12, 2.0], [1.57614128E12, 1.0], [1.576141362E12, 1.0], [1.576141149E12, 1.0], [1.576141059E12, 1.0], [1.576140887E12, 2.0], [1.57614114E12, 2.0], [1.576141312E12, 1.0], [1.576141222E12, 1.0], [1.576141009E12, 1.0], [1.576140968E12, 1.0], [1.576141263E12, 1.0], [1.576141345E12, 1.0], [1.57614096E12, 1.0], [1.576141083E12, 1.0], [1.576140739E12, 4.0], [1.576140911E12, 1.0], [1.576141206E12, 1.0], [1.576141246E12, 1.0], [1.57614082E12, 1.0], [1.576141115E12, 1.0], [1.576141156E12, 1.0], [1.576141238E12, 2.0], [1.576140812E12, 2.0], [1.576140894E12, 1.0], [1.57614132E12, 1.0], [1.576141017E12, 2.0], [1.576140976E12, 1.0], [1.576141189E12, 1.0], [1.576141058E12, 1.0], [1.576141271E12, 2.0], [1.576140845E12, 1.0], [1.576140926E12, 1.0], [1.576141098E12, 1.0], [1.576140885E12, 1.0], [1.576141262E12, 1.0], [1.57614109E12, 1.0], [1.576141303E12, 1.0], [1.576140787E12, 1.0], [1.576140959E12, 1.0], [1.576141254E12, 1.0], [1.576141041E12, 1.0], [1.576141E12, 1.0], [1.57614091E12, 1.0], [1.576141295E12, 2.0], [1.576140779E12, 1.0], [1.576140738E12, 1.0], [1.576141336E12, 1.0], [1.576140991E12, 2.0], [1.576140778E12, 2.0], [1.576141286E12, 1.0], [1.576141073E12, 1.0], [1.576140942E12, 1.0], [1.576141155E12, 1.0], [1.576141327E12, 1.0], [1.576140901E12, 1.0], [1.576140811E12, 2.0], [1.576141196E12, 1.0], [1.576140983E12, 1.0], [1.576141278E12, 1.0], [1.576140852E12, 1.0], [1.576141065E12, 1.0], [1.576141237E12, 1.0], [1.576140934E12, 1.0], [1.576141147E12, 1.0], [1.576141106E12, 1.0], [1.576141319E12, 2.0], [1.576140893E12, 1.0], [1.576141188E12, 1.0], [1.57614136E12, 1.0], [1.576141229E12, 1.0], [1.576141097E12, 1.0], [1.576141269E12, 1.0], [1.576140966E12, 2.0], [1.576141179E12, 1.0], [1.576141138E12, 1.0], [1.576141351E12, 2.0], [1.576140835E12, 1.0], [1.576140876E12, 1.0], [1.576141048E12, 1.0], [1.576141261E12, 2.0], [1.576141171E12, 1.0], [1.576141343E12, 1.0], [1.576140827E12, 1.0], [1.576141212E12, 2.0], [1.576140999E12, 1.0], [1.576140786E12, 1.0], [1.576140868E12, 1.0], [1.57614104E12, 2.0], [1.576140909E12, 1.0], [1.576140777E12, 1.0], [1.57614099E12, 1.0], [1.576141203E12, 1.0], [1.576141162E12, 1.0], [1.576141031E12, 1.0], [1.576141113E12, 1.0], [1.576140941E12, 1.0], [1.576140851E12, 1.0], [1.576141064E12, 1.0], [1.576141277E12, 1.0], [1.576140761E12, 1.0], [1.576141187E12, 1.0], [1.576141359E12, 1.0], [1.576140933E12, 2.0], [1.576140843E12, 1.0], [1.576140842E12, 1.0], [1.576141055E12, 1.0], [1.57614135E12, 1.0], [1.576141309E12, 1.0], [1.576141178E12, 2.0], [1.576140875E12, 1.0], [1.576140916E12, 1.0], [1.576141129E12, 1.0], [1.576141088E12, 2.0], [1.576141252E12, 2.0], [1.57614103E12, 2.0], [1.576140989E12, 1.0], [1.576141284E12, 1.0], [1.576141022E12, 1.0], [1.576140768E12, 2.0], [1.576141194E12, 1.0], [1.576141145E12, 1.0], [1.576141227E12, 1.0], [1.57614076E12, 1.0], [1.5761408E12, 3.0], [1.576141308E12, 1.0], [1.576141095E12, 1.0], [1.576141177E12, 1.0], [1.576141136E12, 1.0], [1.576141046E12, 1.0], [1.576140833E12, 1.0], [1.576141005E12, 1.0], [1.576141128E12, 2.0], [1.576141341E12, 2.0], [1.57614121E12, 1.0], [1.576140866E12, 1.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.576141362E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.576140748E12, "maxY": 3.0, "series": [{"data": [[1.576141332E12, 2.0], [1.576140906E12, 1.0], [1.576141201E12, 1.0], [1.576141283E12, 1.0], [1.576141242E12, 1.0], [1.576141029E12, 1.0], [1.576141324E12, 2.0], [1.576140898E12, 2.0], [1.57614098E12, 1.0], [1.576140767E12, 2.0], [1.576141365E12, 1.0], [1.576141062E12, 1.0], [1.576141234E12, 1.0], [1.576140931E12, 1.0], [1.57614089E12, 1.0], [1.576141103E12, 1.0], [1.576140972E12, 1.0], [1.576141185E12, 1.0], [1.576141357E12, 2.0], [1.576141012E12, 1.0], [1.576141225E12, 1.0], [1.576140799E12, 2.0], [1.576141184E12, 1.0], [1.576141307E12, 1.0], [1.576140881E12, 2.0], [1.576141266E12, 1.0], [1.57614084E12, 2.0], [1.576141053E12, 1.0], [1.57614075E12, 1.0], [1.576141348E12, 1.0], [1.576140922E12, 1.0], [1.576141135E12, 1.0], [1.576141004E12, 1.0], [1.576141217E12, 1.0], [1.576141176E12, 1.0], [1.576141299E12, 1.0], [1.576140873E12, 1.0], [1.576141045E12, 1.0], [1.57614134E12, 1.0], [1.576141168E12, 1.0], [1.576141078E12, 1.0], [1.576141291E12, 1.0], [1.576140865E12, 1.0], [1.57614125E12, 1.0], [1.576140824E12, 1.0], [1.576141037E12, 1.0], [1.576141118E12, 2.0], [1.576140864E12, 1.0], [1.576141077E12, 2.0], [1.576140946E12, 1.0], [1.576141241E12, 1.0], [1.5761412E12, 1.0], [1.576141069E12, 1.0], [1.576140979E12, 1.0], [1.576141364E12, 1.0], [1.576140938E12, 1.0], [1.57614102E12, 2.0], [1.576141192E12, 1.0], [1.576141102E12, 1.0], [1.576141315E12, 1.0], [1.576141274E12, 1.0], [1.576140758E12, 1.0], [1.576141011E12, 1.0], [1.576140757E12, 2.0], [1.576141224E12, 1.0], [1.576140921E12, 2.0], [1.576140749E12, 1.0], [1.576141257E12, 1.0], [1.576140831E12, 2.0], [1.576141216E12, 1.0], [1.576141126E12, 1.0], [1.576141085E12, 1.0], [1.576140995E12, 1.0], [1.576140954E12, 2.0], [1.576141167E12, 1.0], [1.576141036E12, 1.0], [1.576141289E12, 1.0], [1.576141158E12, 1.0], [1.576140945E12, 1.0], [1.576140904E12, 1.0], [1.576140814E12, 1.0], [1.576141027E12, 1.0], [1.576140773E12, 1.0], [1.576140855E12, 1.0], [1.57614115E12, 1.0], [1.576140978E12, 1.0], [1.576141273E12, 1.0], [1.576141232E12, 1.0], [1.576141314E12, 1.0], [1.576141354E12, 1.0], [1.576141051E12, 2.0], [1.576141092E12, 1.0], [1.576141305E12, 1.0], [1.576140748E12, 3.0], [1.57614092E12, 1.0], [1.576140789E12, 3.0], [1.576141002E12, 1.0], [1.576141297E12, 1.0], [1.576140871E12, 1.0], [1.576141166E12, 2.0], [1.576141338E12, 1.0], [1.576140822E12, 1.0], [1.576141207E12, 1.0], [1.576140862E12, 1.0], [1.576141075E12, 1.0], [1.576141247E12, 1.0], [1.576140821E12, 1.0], [1.576141116E12, 1.0], [1.576141329E12, 2.0], [1.576141288E12, 1.0], [1.576141198E12, 1.0], [1.57614137E12, 1.0], [1.576140944E12, 1.0], [1.576141157E12, 1.0], [1.576140854E12, 2.0], [1.576141067E12, 1.0], [1.576141108E12, 2.0], [1.57614128E12, 1.0], [1.576141362E12, 1.0], [1.576141149E12, 1.0], [1.576141059E12, 1.0], [1.576140887E12, 2.0], [1.57614114E12, 2.0], [1.576141312E12, 1.0], [1.576141009E12, 1.0], [1.576140968E12, 1.0], [1.576141263E12, 1.0], [1.576141345E12, 1.0], [1.57614096E12, 1.0], [1.576141083E12, 1.0], [1.576141124E12, 1.0], [1.576140911E12, 1.0], [1.576141206E12, 1.0], [1.576140952E12, 1.0], [1.576141246E12, 1.0], [1.57614082E12, 1.0], [1.576141115E12, 1.0], [1.576141156E12, 1.0], [1.576141369E12, 1.0], [1.576141238E12, 2.0], [1.576140812E12, 2.0], [1.576140894E12, 1.0], [1.57614132E12, 1.0], [1.576141017E12, 2.0], [1.576140976E12, 1.0], [1.576141189E12, 1.0], [1.576141058E12, 1.0], [1.576141271E12, 2.0], [1.576140845E12, 1.0], [1.576140926E12, 1.0], [1.576141098E12, 1.0], [1.576141262E12, 1.0], [1.576141221E12, 1.0], [1.57614109E12, 1.0], [1.576141303E12, 1.0], [1.576140787E12, 1.0], [1.576140959E12, 1.0], [1.576141254E12, 1.0], [1.576141041E12, 1.0], [1.576141E12, 1.0], [1.57614091E12, 1.0], [1.576141295E12, 2.0], [1.576140779E12, 1.0], [1.576141336E12, 1.0], [1.576140991E12, 2.0], [1.576140778E12, 2.0], [1.576141286E12, 1.0], [1.576141073E12, 1.0], [1.576140942E12, 1.0], [1.576141155E12, 1.0], [1.576141327E12, 1.0], [1.576140901E12, 1.0], [1.576140811E12, 2.0], [1.576141196E12, 1.0], [1.576140983E12, 1.0], [1.576141368E12, 1.0], [1.576141278E12, 1.0], [1.576140852E12, 1.0], [1.576141065E12, 1.0], [1.576141237E12, 1.0], [1.576140934E12, 1.0], [1.576141147E12, 1.0], [1.576141106E12, 1.0], [1.576141319E12, 2.0], [1.576140893E12, 1.0], [1.576141188E12, 1.0], [1.57614136E12, 1.0], [1.576141229E12, 1.0], [1.576140884E12, 1.0], [1.576141097E12, 1.0], [1.576141269E12, 1.0], [1.576140966E12, 2.0], [1.576141179E12, 1.0], [1.576141138E12, 1.0], [1.576141351E12, 2.0], [1.576140835E12, 1.0], [1.576140876E12, 1.0], [1.576141048E12, 1.0], [1.576141261E12, 2.0], [1.576141171E12, 1.0], [1.576141343E12, 1.0], [1.576140827E12, 1.0], [1.576141212E12, 2.0], [1.576140999E12, 1.0], [1.576140786E12, 1.0], [1.576140868E12, 1.0], [1.57614104E12, 2.0], [1.576140909E12, 1.0], [1.576140777E12, 1.0], [1.57614099E12, 1.0], [1.576141203E12, 1.0], [1.576141162E12, 1.0], [1.576141031E12, 1.0], [1.576141113E12, 1.0], [1.576140941E12, 1.0], [1.576140851E12, 1.0], [1.576141064E12, 1.0], [1.576141277E12, 1.0], [1.576140761E12, 1.0], [1.576141187E12, 1.0], [1.576141359E12, 1.0], [1.576140933E12, 1.0], [1.576140843E12, 1.0], [1.576140842E12, 1.0], [1.576141055E12, 1.0], [1.57614135E12, 1.0], [1.576141309E12, 1.0], [1.576141178E12, 2.0], [1.576140875E12, 1.0], [1.576140916E12, 1.0], [1.576141129E12, 1.0], [1.576141088E12, 2.0], [1.576141252E12, 2.0], [1.57614103E12, 2.0], [1.576140989E12, 1.0], [1.576141284E12, 1.0], [1.576141022E12, 1.0], [1.576140768E12, 2.0], [1.576141194E12, 1.0], [1.576140932E12, 1.0], [1.576141145E12, 1.0], [1.576141227E12, 1.0], [1.57614076E12, 1.0], [1.5761408E12, 3.0], [1.576141308E12, 1.0], [1.576141095E12, 1.0], [1.576141177E12, 1.0], [1.576141136E12, 1.0], [1.576141046E12, 1.0], [1.576140833E12, 1.0], [1.576141005E12, 1.0], [1.576141128E12, 2.0], [1.576141341E12, 2.0], [1.57614121E12, 1.0], [1.576140866E12, 1.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.57614137E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.576140748E12, "maxY": 3.0, "series": [{"data": [[1.576141332E12, 2.0], [1.576140906E12, 1.0], [1.576141201E12, 1.0], [1.576141283E12, 1.0], [1.576141242E12, 1.0], [1.576141029E12, 1.0], [1.576141324E12, 2.0], [1.576140898E12, 2.0], [1.57614098E12, 1.0], [1.576140767E12, 2.0], [1.576141365E12, 1.0], [1.576141062E12, 1.0], [1.576141234E12, 1.0], [1.576140931E12, 1.0], [1.57614089E12, 1.0], [1.576141103E12, 1.0], [1.576140972E12, 1.0], [1.576141185E12, 1.0], [1.576141357E12, 2.0], [1.576141012E12, 1.0], [1.576141225E12, 1.0], [1.576140799E12, 2.0], [1.576141184E12, 1.0], [1.576141307E12, 1.0], [1.576140881E12, 2.0], [1.576141266E12, 1.0], [1.57614084E12, 2.0], [1.576141053E12, 1.0], [1.57614075E12, 1.0], [1.576141348E12, 1.0], [1.576140922E12, 1.0], [1.576141135E12, 1.0], [1.576141004E12, 1.0], [1.576141217E12, 1.0], [1.576141176E12, 1.0], [1.576141299E12, 1.0], [1.576140873E12, 1.0], [1.576141045E12, 1.0], [1.57614134E12, 1.0], [1.576141168E12, 1.0], [1.576141078E12, 1.0], [1.576141291E12, 1.0], [1.576140865E12, 1.0], [1.57614125E12, 1.0], [1.576140824E12, 1.0], [1.576141037E12, 1.0], [1.576141118E12, 2.0], [1.576140864E12, 1.0], [1.576141077E12, 2.0], [1.576140946E12, 1.0], [1.576141241E12, 1.0], [1.5761412E12, 1.0], [1.576141069E12, 1.0], [1.576140979E12, 1.0], [1.576141364E12, 1.0], [1.576140938E12, 1.0], [1.57614102E12, 2.0], [1.576141192E12, 1.0], [1.576141102E12, 1.0], [1.576141315E12, 1.0], [1.576141274E12, 1.0], [1.576140758E12, 1.0], [1.576141011E12, 1.0], [1.576140757E12, 2.0], [1.576141224E12, 1.0], [1.576140921E12, 2.0], [1.576140749E12, 1.0], [1.576141257E12, 1.0], [1.576140831E12, 2.0], [1.576141216E12, 1.0], [1.576141126E12, 1.0], [1.576141085E12, 1.0], [1.576140995E12, 1.0], [1.576140954E12, 2.0], [1.576141167E12, 1.0], [1.576141036E12, 1.0], [1.576141289E12, 1.0], [1.576141158E12, 1.0], [1.576140945E12, 1.0], [1.576140904E12, 1.0], [1.576140814E12, 1.0], [1.576141027E12, 1.0], [1.576140773E12, 1.0], [1.576140855E12, 1.0], [1.57614115E12, 1.0], [1.576140978E12, 1.0], [1.576141273E12, 1.0], [1.576141232E12, 1.0], [1.576141314E12, 1.0], [1.576141354E12, 1.0], [1.576141051E12, 2.0], [1.576141092E12, 1.0], [1.576141305E12, 1.0], [1.576140748E12, 3.0], [1.57614092E12, 1.0], [1.576140789E12, 3.0], [1.576141002E12, 1.0], [1.576141297E12, 1.0], [1.576140871E12, 1.0], [1.576141166E12, 2.0], [1.576141338E12, 1.0], [1.576140822E12, 1.0], [1.576141207E12, 1.0], [1.576140862E12, 1.0], [1.576141075E12, 1.0], [1.576141247E12, 1.0], [1.576140821E12, 1.0], [1.576141116E12, 1.0], [1.576141329E12, 2.0], [1.576141288E12, 1.0], [1.576141198E12, 1.0], [1.57614137E12, 1.0], [1.576140944E12, 1.0], [1.576141157E12, 1.0], [1.576140854E12, 2.0], [1.576141067E12, 1.0], [1.576141108E12, 2.0], [1.57614128E12, 1.0], [1.576141362E12, 1.0], [1.576141149E12, 1.0], [1.576141059E12, 1.0], [1.576140887E12, 2.0], [1.57614114E12, 2.0], [1.576141312E12, 1.0], [1.576141009E12, 1.0], [1.576140968E12, 1.0], [1.576141263E12, 1.0], [1.576141345E12, 1.0], [1.57614096E12, 1.0], [1.576141083E12, 1.0], [1.576141124E12, 1.0], [1.576140911E12, 1.0], [1.576141206E12, 1.0], [1.576140952E12, 1.0], [1.576141246E12, 1.0], [1.57614082E12, 1.0], [1.576141115E12, 1.0], [1.576141156E12, 1.0], [1.576141369E12, 1.0], [1.576141238E12, 2.0], [1.576140812E12, 2.0], [1.576140894E12, 1.0], [1.57614132E12, 1.0], [1.576141017E12, 2.0], [1.576140976E12, 1.0], [1.576141189E12, 1.0], [1.576141058E12, 1.0], [1.576141271E12, 2.0], [1.576140845E12, 1.0], [1.576140926E12, 1.0], [1.576141098E12, 1.0], [1.576141262E12, 1.0], [1.576141221E12, 1.0], [1.57614109E12, 1.0], [1.576141303E12, 1.0], [1.576140787E12, 1.0], [1.576140959E12, 1.0], [1.576141254E12, 1.0], [1.576141041E12, 1.0], [1.576141E12, 1.0], [1.57614091E12, 1.0], [1.576141295E12, 2.0], [1.576140779E12, 1.0], [1.576141336E12, 1.0], [1.576140991E12, 2.0], [1.576140778E12, 2.0], [1.576141286E12, 1.0], [1.576141073E12, 1.0], [1.576140942E12, 1.0], [1.576141155E12, 1.0], [1.576141327E12, 1.0], [1.576140901E12, 1.0], [1.576140811E12, 2.0], [1.576141196E12, 1.0], [1.576140983E12, 1.0], [1.576141368E12, 1.0], [1.576141278E12, 1.0], [1.576140852E12, 1.0], [1.576141065E12, 1.0], [1.576141237E12, 1.0], [1.576140934E12, 1.0], [1.576141147E12, 1.0], [1.576141106E12, 1.0], [1.576141319E12, 2.0], [1.576140893E12, 1.0], [1.576141188E12, 1.0], [1.57614136E12, 1.0], [1.576141229E12, 1.0], [1.576140884E12, 1.0], [1.576141097E12, 1.0], [1.576141269E12, 1.0], [1.576140966E12, 2.0], [1.576141179E12, 1.0], [1.576141138E12, 1.0], [1.576141351E12, 2.0], [1.576140835E12, 1.0], [1.576140876E12, 1.0], [1.576141048E12, 1.0], [1.576141261E12, 2.0], [1.576141171E12, 1.0], [1.576141343E12, 1.0], [1.576140827E12, 1.0], [1.576141212E12, 2.0], [1.576140999E12, 1.0], [1.576140786E12, 1.0], [1.576140868E12, 1.0], [1.57614104E12, 2.0], [1.576140909E12, 1.0], [1.576140777E12, 1.0], [1.57614099E12, 1.0], [1.576141203E12, 1.0], [1.576141162E12, 1.0], [1.576141031E12, 1.0], [1.576141113E12, 1.0], [1.576140941E12, 1.0], [1.576140851E12, 1.0], [1.576141064E12, 1.0], [1.576141277E12, 1.0], [1.576140761E12, 1.0], [1.576141187E12, 1.0], [1.576141359E12, 1.0], [1.576140933E12, 1.0], [1.576140843E12, 1.0], [1.576140842E12, 1.0], [1.576141055E12, 1.0], [1.57614135E12, 1.0], [1.576141309E12, 1.0], [1.576141178E12, 2.0], [1.576140875E12, 1.0], [1.576140916E12, 1.0], [1.576141129E12, 1.0], [1.576141088E12, 2.0], [1.576141252E12, 2.0], [1.57614103E12, 2.0], [1.576140989E12, 1.0], [1.576141284E12, 1.0], [1.576141022E12, 1.0], [1.576140768E12, 2.0], [1.576141194E12, 1.0], [1.576140932E12, 1.0], [1.576141145E12, 1.0], [1.576141227E12, 1.0], [1.57614076E12, 1.0], [1.5761408E12, 3.0], [1.576141308E12, 1.0], [1.576141095E12, 1.0], [1.576141177E12, 1.0], [1.576141136E12, 1.0], [1.576141046E12, 1.0], [1.576140833E12, 1.0], [1.576141005E12, 1.0], [1.576141128E12, 2.0], [1.576141341E12, 2.0], [1.57614121E12, 1.0], [1.576140866E12, 1.0]], "isOverall": false, "label": "CreateRatesAvailability-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.57614137E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.576140748E12, "maxY": 3.0, "series": [{"data": [[1.576141332E12, 2.0], [1.576140906E12, 1.0], [1.576141201E12, 1.0], [1.576141283E12, 1.0], [1.576141242E12, 1.0], [1.576141029E12, 1.0], [1.576141324E12, 2.0], [1.576140898E12, 2.0], [1.57614098E12, 1.0], [1.576140767E12, 2.0], [1.576141365E12, 1.0], [1.576141062E12, 1.0], [1.576141234E12, 1.0], [1.576140931E12, 1.0], [1.57614089E12, 1.0], [1.576141103E12, 1.0], [1.576140972E12, 1.0], [1.576141185E12, 1.0], [1.576141357E12, 2.0], [1.576141012E12, 1.0], [1.576141225E12, 1.0], [1.576140799E12, 2.0], [1.576141184E12, 1.0], [1.576141307E12, 1.0], [1.576140881E12, 2.0], [1.576141266E12, 1.0], [1.57614084E12, 2.0], [1.576141053E12, 1.0], [1.57614075E12, 1.0], [1.576141348E12, 1.0], [1.576140922E12, 1.0], [1.576141135E12, 1.0], [1.576141004E12, 1.0], [1.576141217E12, 1.0], [1.576141176E12, 1.0], [1.576141299E12, 1.0], [1.576140873E12, 1.0], [1.576141045E12, 1.0], [1.57614134E12, 1.0], [1.576141168E12, 1.0], [1.576141078E12, 1.0], [1.576141291E12, 1.0], [1.576140865E12, 1.0], [1.57614125E12, 1.0], [1.576140824E12, 1.0], [1.576141037E12, 1.0], [1.576141118E12, 2.0], [1.576140864E12, 1.0], [1.576141077E12, 2.0], [1.576140946E12, 1.0], [1.576141241E12, 1.0], [1.5761412E12, 1.0], [1.576141069E12, 1.0], [1.576140979E12, 1.0], [1.576141364E12, 1.0], [1.576140938E12, 1.0], [1.57614102E12, 2.0], [1.576141192E12, 1.0], [1.576141102E12, 1.0], [1.576141315E12, 1.0], [1.576141274E12, 1.0], [1.576140758E12, 1.0], [1.576141011E12, 1.0], [1.576140757E12, 2.0], [1.576141224E12, 1.0], [1.576140921E12, 2.0], [1.576140749E12, 1.0], [1.576141257E12, 1.0], [1.576140831E12, 2.0], [1.576141216E12, 1.0], [1.576141126E12, 1.0], [1.576141085E12, 1.0], [1.576140995E12, 1.0], [1.576140954E12, 2.0], [1.576141167E12, 1.0], [1.576141036E12, 1.0], [1.576141289E12, 1.0], [1.576141158E12, 1.0], [1.576140945E12, 1.0], [1.576140904E12, 1.0], [1.576140814E12, 1.0], [1.576141027E12, 1.0], [1.576140773E12, 1.0], [1.576140855E12, 1.0], [1.57614115E12, 1.0], [1.576140978E12, 1.0], [1.576141273E12, 1.0], [1.576141232E12, 1.0], [1.576141314E12, 1.0], [1.576141354E12, 1.0], [1.576141051E12, 2.0], [1.576141092E12, 1.0], [1.576141305E12, 1.0], [1.576140748E12, 3.0], [1.57614092E12, 1.0], [1.576140789E12, 3.0], [1.576141002E12, 1.0], [1.576141297E12, 1.0], [1.576140871E12, 1.0], [1.576141166E12, 2.0], [1.576141338E12, 1.0], [1.576140822E12, 1.0], [1.576141207E12, 1.0], [1.576140862E12, 1.0], [1.576141075E12, 1.0], [1.576141247E12, 1.0], [1.576140821E12, 1.0], [1.576141116E12, 1.0], [1.576141329E12, 2.0], [1.576141288E12, 1.0], [1.576141198E12, 1.0], [1.57614137E12, 1.0], [1.576140944E12, 1.0], [1.576141157E12, 1.0], [1.576140854E12, 2.0], [1.576141067E12, 1.0], [1.576141108E12, 2.0], [1.57614128E12, 1.0], [1.576141362E12, 1.0], [1.576141149E12, 1.0], [1.576141059E12, 1.0], [1.576140887E12, 2.0], [1.57614114E12, 2.0], [1.576141312E12, 1.0], [1.576141009E12, 1.0], [1.576140968E12, 1.0], [1.576141263E12, 1.0], [1.576141345E12, 1.0], [1.57614096E12, 1.0], [1.576141083E12, 1.0], [1.576141124E12, 1.0], [1.576140911E12, 1.0], [1.576141206E12, 1.0], [1.576140952E12, 1.0], [1.576141246E12, 1.0], [1.57614082E12, 1.0], [1.576141115E12, 1.0], [1.576141156E12, 1.0], [1.576141369E12, 1.0], [1.576141238E12, 2.0], [1.576140812E12, 2.0], [1.576140894E12, 1.0], [1.57614132E12, 1.0], [1.576141017E12, 2.0], [1.576140976E12, 1.0], [1.576141189E12, 1.0], [1.576141058E12, 1.0], [1.576141271E12, 2.0], [1.576140845E12, 1.0], [1.576140926E12, 1.0], [1.576141098E12, 1.0], [1.576141262E12, 1.0], [1.576141221E12, 1.0], [1.57614109E12, 1.0], [1.576141303E12, 1.0], [1.576140787E12, 1.0], [1.576140959E12, 1.0], [1.576141254E12, 1.0], [1.576141041E12, 1.0], [1.576141E12, 1.0], [1.57614091E12, 1.0], [1.576141295E12, 2.0], [1.576140779E12, 1.0], [1.576141336E12, 1.0], [1.576140991E12, 2.0], [1.576140778E12, 2.0], [1.576141286E12, 1.0], [1.576141073E12, 1.0], [1.576140942E12, 1.0], [1.576141155E12, 1.0], [1.576141327E12, 1.0], [1.576140901E12, 1.0], [1.576140811E12, 2.0], [1.576141196E12, 1.0], [1.576140983E12, 1.0], [1.576141368E12, 1.0], [1.576141278E12, 1.0], [1.576140852E12, 1.0], [1.576141065E12, 1.0], [1.576141237E12, 1.0], [1.576140934E12, 1.0], [1.576141147E12, 1.0], [1.576141106E12, 1.0], [1.576141319E12, 2.0], [1.576140893E12, 1.0], [1.576141188E12, 1.0], [1.57614136E12, 1.0], [1.576141229E12, 1.0], [1.576140884E12, 1.0], [1.576141097E12, 1.0], [1.576141269E12, 1.0], [1.576140966E12, 2.0], [1.576141179E12, 1.0], [1.576141138E12, 1.0], [1.576141351E12, 2.0], [1.576140835E12, 1.0], [1.576140876E12, 1.0], [1.576141048E12, 1.0], [1.576141261E12, 2.0], [1.576141171E12, 1.0], [1.576141343E12, 1.0], [1.576140827E12, 1.0], [1.576141212E12, 2.0], [1.576140999E12, 1.0], [1.576140786E12, 1.0], [1.576140868E12, 1.0], [1.57614104E12, 2.0], [1.576140909E12, 1.0], [1.576140777E12, 1.0], [1.57614099E12, 1.0], [1.576141203E12, 1.0], [1.576141162E12, 1.0], [1.576141031E12, 1.0], [1.576141113E12, 1.0], [1.576140941E12, 1.0], [1.576140851E12, 1.0], [1.576141064E12, 1.0], [1.576141277E12, 1.0], [1.576140761E12, 1.0], [1.576141187E12, 1.0], [1.576141359E12, 1.0], [1.576140933E12, 1.0], [1.576140843E12, 1.0], [1.576140842E12, 1.0], [1.576141055E12, 1.0], [1.57614135E12, 1.0], [1.576141309E12, 1.0], [1.576141178E12, 2.0], [1.576140875E12, 1.0], [1.576140916E12, 1.0], [1.576141129E12, 1.0], [1.576141088E12, 2.0], [1.576141252E12, 2.0], [1.57614103E12, 2.0], [1.576140989E12, 1.0], [1.576141284E12, 1.0], [1.576141022E12, 1.0], [1.576140768E12, 2.0], [1.576141194E12, 1.0], [1.576140932E12, 1.0], [1.576141145E12, 1.0], [1.576141227E12, 1.0], [1.57614076E12, 1.0], [1.5761408E12, 3.0], [1.576141308E12, 1.0], [1.576141095E12, 1.0], [1.576141177E12, 1.0], [1.576141136E12, 1.0], [1.576141046E12, 1.0], [1.576140833E12, 1.0], [1.576141005E12, 1.0], [1.576141128E12, 2.0], [1.576141341E12, 2.0], [1.57614121E12, 1.0], [1.576140866E12, 1.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.57614137E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

